
keypad.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001168  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000064  08001310  08001310  00011310  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001374  08001374  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001374  08001374  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001374  08001374  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001374  08001374  00011374  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001378  08001378  00011378  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800137c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   000018fb  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000443  00000000  00000000  0002198f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000118  00000000  00000000  00021dd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000e0  00000000  00000000  00021ef0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bfc  00000000  00000000  00021fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001589  00000000  00000000  00024bcc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009854  00000000  00000000  00026155  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002f9a9  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000a6c  00000000  00000000  0002f9fc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000064 	.word	0x20000064
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080012f8 	.word	0x080012f8

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000068 	.word	0x20000068
 80001e4:	080012f8 	.word	0x080012f8

080001e8 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{//GPIOD:0x4002 0C00
 80001e8:	b580      	push	{r7, lr}
 80001ea:	b096      	sub	sp, #88	; 0x58
 80001ec:	af00      	add	r7, sp, #0
    RCC_AHB1ENR_t volatile  *pClkCtrlReg = (uint32_t*)0x40023830;
 80001ee:	4b95      	ldr	r3, [pc, #596]	; (8000444 <main+0x25c>)
 80001f0:	617b      	str	r3, [r7, #20]
    GPIOx_MODE_t volatile  *pPortDModeReg = (uint32_t*)0x40020C00;
 80001f2:	4b95      	ldr	r3, [pc, #596]	; (8000448 <main+0x260>)
 80001f4:	613b      	str	r3, [r7, #16]
    GPIOx_ODR_t volatile  *pPortDOutReg = (uint32_t*)0x40020C14;
 80001f6:	4b95      	ldr	r3, [pc, #596]	; (800044c <main+0x264>)
 80001f8:	60fb      	str	r3, [r7, #12]
    GPIOx_IDR_t volatile *const pPortDInReg=(GPIOx_IDR_t*)0x40020C10;
 80001fa:	4b95      	ldr	r3, [pc, #596]	; (8000450 <main+0x268>)
 80001fc:	60bb      	str	r3, [r7, #8]
    GPIOx_PUPDR_t volatile *const pPortDPUPDR=(GPIOx_PUPDR_t*)0x40020C0C;
 80001fe:	4b95      	ldr	r3, [pc, #596]	; (8000454 <main+0x26c>)
 8000200:	607b      	str	r3, [r7, #4]



    pClkCtrlReg->gpiod_en=1;//1,3,0 yazabilirsin İşlemcide GPIOD etkinleştirildi
 8000202:	697a      	ldr	r2, [r7, #20]
 8000204:	6813      	ldr	r3, [r2, #0]
 8000206:	f043 0308 	orr.w	r3, r3, #8
 800020a:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_0=0;
 800020c:	693a      	ldr	r2, [r7, #16]
 800020e:	6813      	ldr	r3, [r2, #0]
 8000210:	f36f 0301 	bfc	r3, #0, #2
 8000214:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_1=0;
 8000216:	693a      	ldr	r2, [r7, #16]
 8000218:	6813      	ldr	r3, [r2, #0]
 800021a:	f36f 0383 	bfc	r3, #2, #2
 800021e:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_2=0;
 8000220:	693a      	ldr	r2, [r7, #16]
 8000222:	6813      	ldr	r3, [r2, #0]
 8000224:	f36f 1305 	bfc	r3, #4, #2
 8000228:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_3=0;
 800022a:	693a      	ldr	r2, [r7, #16]
 800022c:	6813      	ldr	r3, [r2, #0]
 800022e:	f36f 1387 	bfc	r3, #6, #2
 8000232:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_8=0;   //GPIO statülerini temizledik aynı zamanda pin 8,9,10,11 i input yaptık
 8000234:	693a      	ldr	r2, [r7, #16]
 8000236:	6813      	ldr	r3, [r2, #0]
 8000238:	f36f 4311 	bfc	r3, #16, #2
 800023c:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_9=0;
 800023e:	693a      	ldr	r2, [r7, #16]
 8000240:	6813      	ldr	r3, [r2, #0]
 8000242:	f36f 4393 	bfc	r3, #18, #2
 8000246:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_10=0;
 8000248:	693a      	ldr	r2, [r7, #16]
 800024a:	6813      	ldr	r3, [r2, #0]
 800024c:	f36f 5315 	bfc	r3, #20, #2
 8000250:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_11=0;
 8000252:	693a      	ldr	r2, [r7, #16]
 8000254:	6813      	ldr	r3, [r2, #0]
 8000256:	f36f 5397 	bfc	r3, #22, #2
 800025a:	6013      	str	r3, [r2, #0]
    //GPIO OUTPUT statülerini atıyoruz
    pPortDModeReg->pin_0=1;
 800025c:	693a      	ldr	r2, [r7, #16]
 800025e:	6813      	ldr	r3, [r2, #0]
 8000260:	2101      	movs	r1, #1
 8000262:	f361 0301 	bfi	r3, r1, #0, #2
 8000266:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_1=1;
 8000268:	693a      	ldr	r2, [r7, #16]
 800026a:	6813      	ldr	r3, [r2, #0]
 800026c:	2101      	movs	r1, #1
 800026e:	f361 0383 	bfi	r3, r1, #2, #2
 8000272:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_2=1;
 8000274:	693a      	ldr	r2, [r7, #16]
 8000276:	6813      	ldr	r3, [r2, #0]
 8000278:	2101      	movs	r1, #1
 800027a:	f361 1305 	bfi	r3, r1, #4, #2
 800027e:	6013      	str	r3, [r2, #0]
    pPortDModeReg->pin_3=1;
 8000280:	693a      	ldr	r2, [r7, #16]
 8000282:	6813      	ldr	r3, [r2, #0]
 8000284:	2101      	movs	r1, #1
 8000286:	f361 1387 	bfi	r3, r1, #6, #2
 800028a:	6013      	str	r3, [r2, #0]
    //GPIO PULLUP DİRENCİ İNPUTA BAĞLIYORUZ
    pPortDPUPDR->pin_8=1;
 800028c:	687a      	ldr	r2, [r7, #4]
 800028e:	6813      	ldr	r3, [r2, #0]
 8000290:	2101      	movs	r1, #1
 8000292:	f361 4311 	bfi	r3, r1, #16, #2
 8000296:	6013      	str	r3, [r2, #0]
    pPortDPUPDR->pin_9=1;
 8000298:	687a      	ldr	r2, [r7, #4]
 800029a:	6813      	ldr	r3, [r2, #0]
 800029c:	2101      	movs	r1, #1
 800029e:	f361 4393 	bfi	r3, r1, #18, #2
 80002a2:	6013      	str	r3, [r2, #0]
    pPortDPUPDR->pin_10=1;
 80002a4:	687a      	ldr	r2, [r7, #4]
 80002a6:	6813      	ldr	r3, [r2, #0]
 80002a8:	2101      	movs	r1, #1
 80002aa:	f361 5315 	bfi	r3, r1, #20, #2
 80002ae:	6013      	str	r3, [r2, #0]
    pPortDPUPDR->pin_11=1;
 80002b0:	687a      	ldr	r2, [r7, #4]
 80002b2:	6813      	ldr	r3, [r2, #0]
 80002b4:	2101      	movs	r1, #1
 80002b6:	f361 5397 	bfi	r3, r1, #22, #2
 80002ba:	6013      	str	r3, [r2, #0]
    //GPIO OUTPUT LARI HİGH YAPIYORUZ
    pPortDOutReg->pin_0=1;
 80002bc:	68fa      	ldr	r2, [r7, #12]
 80002be:	6813      	ldr	r3, [r2, #0]
 80002c0:	f043 0301 	orr.w	r3, r3, #1
 80002c4:	6013      	str	r3, [r2, #0]
    pPortDOutReg->pin_1=1;
 80002c6:	68fa      	ldr	r2, [r7, #12]
 80002c8:	6813      	ldr	r3, [r2, #0]
 80002ca:	f043 0302 	orr.w	r3, r3, #2
 80002ce:	6013      	str	r3, [r2, #0]
    pPortDOutReg->pin_2=1;
 80002d0:	68fa      	ldr	r2, [r7, #12]
 80002d2:	6813      	ldr	r3, [r2, #0]
 80002d4:	f043 0304 	orr.w	r3, r3, #4
 80002d8:	6013      	str	r3, [r2, #0]
    pPortDOutReg->pin_3=1;
 80002da:	68fa      	ldr	r2, [r7, #12]
 80002dc:	6813      	ldr	r3, [r2, #0]
 80002de:	f043 0308 	orr.w	r3, r3, #8
 80002e2:	6013      	str	r3, [r2, #0]



    while(1){
    	pPortDOutReg->pin_0=0; //Satır kontrol etme
 80002e4:	68fa      	ldr	r2, [r7, #12]
 80002e6:	6813      	ldr	r3, [r2, #0]
 80002e8:	f36f 0300 	bfc	r3, #0, #1
 80002ec:	6013      	str	r3, [r2, #0]
    	if(pPortDInReg->pin_8==0){
 80002ee:	68bb      	ldr	r3, [r7, #8]
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	f3c3 2300 	ubfx	r3, r3, #8, #1
 80002f6:	b2db      	uxtb	r3, r3
 80002f8:	2b00      	cmp	r3, #0
 80002fa:	d113      	bne.n	8000324 <main+0x13c>
    		printf("1");
 80002fc:	2031      	movs	r0, #49	; 0x31
 80002fe:	f000 fdaf 	bl	8000e60 <putchar>
    		fflush(stdout);
 8000302:	4b55      	ldr	r3, [pc, #340]	; (8000458 <main+0x270>)
 8000304:	681b      	ldr	r3, [r3, #0]
 8000306:	689b      	ldr	r3, [r3, #8]
 8000308:	4618      	mov	r0, r3
 800030a:	f000 fb91 	bl	8000a30 <fflush>
    		for(uint32_t i=0;i<=300000;i++);
 800030e:	2300      	movs	r3, #0
 8000310:	657b      	str	r3, [r7, #84]	; 0x54
 8000312:	e002      	b.n	800031a <main+0x132>
 8000314:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000316:	3301      	adds	r3, #1
 8000318:	657b      	str	r3, [r7, #84]	; 0x54
 800031a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800031c:	4a4f      	ldr	r2, [pc, #316]	; (800045c <main+0x274>)
 800031e:	4293      	cmp	r3, r2
 8000320:	d9f8      	bls.n	8000314 <main+0x12c>
 8000322:	e04f      	b.n	80003c4 <main+0x1dc>
    	}
    	else if(pPortDInReg->pin_9==0){
 8000324:	68bb      	ldr	r3, [r7, #8]
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800032c:	b2db      	uxtb	r3, r3
 800032e:	2b00      	cmp	r3, #0
 8000330:	d113      	bne.n	800035a <main+0x172>
    		printf("2");
 8000332:	2032      	movs	r0, #50	; 0x32
 8000334:	f000 fd94 	bl	8000e60 <putchar>
    		fflush(stdout);
 8000338:	4b47      	ldr	r3, [pc, #284]	; (8000458 <main+0x270>)
 800033a:	681b      	ldr	r3, [r3, #0]
 800033c:	689b      	ldr	r3, [r3, #8]
 800033e:	4618      	mov	r0, r3
 8000340:	f000 fb76 	bl	8000a30 <fflush>
    		for(uint32_t i=0;i<=300000;i++);
 8000344:	2300      	movs	r3, #0
 8000346:	653b      	str	r3, [r7, #80]	; 0x50
 8000348:	e002      	b.n	8000350 <main+0x168>
 800034a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800034c:	3301      	adds	r3, #1
 800034e:	653b      	str	r3, [r7, #80]	; 0x50
 8000350:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000352:	4a42      	ldr	r2, [pc, #264]	; (800045c <main+0x274>)
 8000354:	4293      	cmp	r3, r2
 8000356:	d9f8      	bls.n	800034a <main+0x162>
 8000358:	e034      	b.n	80003c4 <main+0x1dc>
    	}
    	else if(pPortDInReg->pin_10==0){
 800035a:	68bb      	ldr	r3, [r7, #8]
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	f3c3 2380 	ubfx	r3, r3, #10, #1
 8000362:	b2db      	uxtb	r3, r3
 8000364:	2b00      	cmp	r3, #0
 8000366:	d113      	bne.n	8000390 <main+0x1a8>
    	    printf("3");
 8000368:	2033      	movs	r0, #51	; 0x33
 800036a:	f000 fd79 	bl	8000e60 <putchar>
    	    fflush(stdout);
 800036e:	4b3a      	ldr	r3, [pc, #232]	; (8000458 <main+0x270>)
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	689b      	ldr	r3, [r3, #8]
 8000374:	4618      	mov	r0, r3
 8000376:	f000 fb5b 	bl	8000a30 <fflush>
    	    for(uint32_t i=0;i<=300000;i++);
 800037a:	2300      	movs	r3, #0
 800037c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800037e:	e002      	b.n	8000386 <main+0x19e>
 8000380:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000382:	3301      	adds	r3, #1
 8000384:	64fb      	str	r3, [r7, #76]	; 0x4c
 8000386:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000388:	4a34      	ldr	r2, [pc, #208]	; (800045c <main+0x274>)
 800038a:	4293      	cmp	r3, r2
 800038c:	d9f8      	bls.n	8000380 <main+0x198>
 800038e:	e019      	b.n	80003c4 <main+0x1dc>
    	}
    	else if(pPortDInReg->pin_11==0){
 8000390:	68bb      	ldr	r3, [r7, #8]
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 8000398:	b2db      	uxtb	r3, r3
 800039a:	2b00      	cmp	r3, #0
 800039c:	d112      	bne.n	80003c4 <main+0x1dc>
    	    printf("A");
 800039e:	2041      	movs	r0, #65	; 0x41
 80003a0:	f000 fd5e 	bl	8000e60 <putchar>
    	    fflush(stdout);
 80003a4:	4b2c      	ldr	r3, [pc, #176]	; (8000458 <main+0x270>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	689b      	ldr	r3, [r3, #8]
 80003aa:	4618      	mov	r0, r3
 80003ac:	f000 fb40 	bl	8000a30 <fflush>
    	    for(uint32_t i=0;i<=300000;i++);
 80003b0:	2300      	movs	r3, #0
 80003b2:	64bb      	str	r3, [r7, #72]	; 0x48
 80003b4:	e002      	b.n	80003bc <main+0x1d4>
 80003b6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80003b8:	3301      	adds	r3, #1
 80003ba:	64bb      	str	r3, [r7, #72]	; 0x48
 80003bc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80003be:	4a27      	ldr	r2, [pc, #156]	; (800045c <main+0x274>)
 80003c0:	4293      	cmp	r3, r2
 80003c2:	d9f8      	bls.n	80003b6 <main+0x1ce>
    	}
    	pPortDOutReg->pin_0=1;
 80003c4:	68fa      	ldr	r2, [r7, #12]
 80003c6:	6813      	ldr	r3, [r2, #0]
 80003c8:	f043 0301 	orr.w	r3, r3, #1
 80003cc:	6013      	str	r3, [r2, #0]


    	pPortDOutReg->pin_1=0; //Satır kontrol etme
 80003ce:	68fa      	ldr	r2, [r7, #12]
 80003d0:	6813      	ldr	r3, [r2, #0]
 80003d2:	f36f 0341 	bfc	r3, #1, #1
 80003d6:	6013      	str	r3, [r2, #0]
    	if(pPortDInReg->pin_8==0){
 80003d8:	68bb      	ldr	r3, [r7, #8]
 80003da:	681b      	ldr	r3, [r3, #0]
 80003dc:	f3c3 2300 	ubfx	r3, r3, #8, #1
 80003e0:	b2db      	uxtb	r3, r3
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d113      	bne.n	800040e <main+0x226>
    		printf("4");
 80003e6:	2034      	movs	r0, #52	; 0x34
 80003e8:	f000 fd3a 	bl	8000e60 <putchar>
    		fflush(stdout);
 80003ec:	4b1a      	ldr	r3, [pc, #104]	; (8000458 <main+0x270>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	689b      	ldr	r3, [r3, #8]
 80003f2:	4618      	mov	r0, r3
 80003f4:	f000 fb1c 	bl	8000a30 <fflush>
    		for(uint32_t i=0;i<=300000;i++);
 80003f8:	2300      	movs	r3, #0
 80003fa:	647b      	str	r3, [r7, #68]	; 0x44
 80003fc:	e002      	b.n	8000404 <main+0x21c>
 80003fe:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000400:	3301      	adds	r3, #1
 8000402:	647b      	str	r3, [r7, #68]	; 0x44
 8000404:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000406:	4a15      	ldr	r2, [pc, #84]	; (800045c <main+0x274>)
 8000408:	4293      	cmp	r3, r2
 800040a:	d9f8      	bls.n	80003fe <main+0x216>
 800040c:	e05d      	b.n	80004ca <main+0x2e2>
    	}
    	else if(pPortDInReg->pin_9==0){
 800040e:	68bb      	ldr	r3, [r7, #8]
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	f3c3 2340 	ubfx	r3, r3, #9, #1
 8000416:	b2db      	uxtb	r3, r3
 8000418:	2b00      	cmp	r3, #0
 800041a:	d121      	bne.n	8000460 <main+0x278>
    		printf("5");
 800041c:	2035      	movs	r0, #53	; 0x35
 800041e:	f000 fd1f 	bl	8000e60 <putchar>
    		fflush(stdout);
 8000422:	4b0d      	ldr	r3, [pc, #52]	; (8000458 <main+0x270>)
 8000424:	681b      	ldr	r3, [r3, #0]
 8000426:	689b      	ldr	r3, [r3, #8]
 8000428:	4618      	mov	r0, r3
 800042a:	f000 fb01 	bl	8000a30 <fflush>
    		for(uint32_t i=0;i<=300000;i++);
 800042e:	2300      	movs	r3, #0
 8000430:	643b      	str	r3, [r7, #64]	; 0x40
 8000432:	e002      	b.n	800043a <main+0x252>
 8000434:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8000436:	3301      	adds	r3, #1
 8000438:	643b      	str	r3, [r7, #64]	; 0x40
 800043a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800043c:	4a07      	ldr	r2, [pc, #28]	; (800045c <main+0x274>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d9f8      	bls.n	8000434 <main+0x24c>
 8000442:	e042      	b.n	80004ca <main+0x2e2>
 8000444:	40023830 	.word	0x40023830
 8000448:	40020c00 	.word	0x40020c00
 800044c:	40020c14 	.word	0x40020c14
 8000450:	40020c10 	.word	0x40020c10
 8000454:	40020c0c 	.word	0x40020c0c
 8000458:	20000000 	.word	0x20000000
 800045c:	000493e0 	.word	0x000493e0
    	}
    	else if(pPortDInReg->pin_10==0){
 8000460:	68bb      	ldr	r3, [r7, #8]
 8000462:	681b      	ldr	r3, [r3, #0]
 8000464:	f3c3 2380 	ubfx	r3, r3, #10, #1
 8000468:	b2db      	uxtb	r3, r3
 800046a:	2b00      	cmp	r3, #0
 800046c:	d113      	bne.n	8000496 <main+0x2ae>
    	    printf("6");
 800046e:	2036      	movs	r0, #54	; 0x36
 8000470:	f000 fcf6 	bl	8000e60 <putchar>
    	    fflush(stdout);
 8000474:	4b8d      	ldr	r3, [pc, #564]	; (80006ac <main+0x4c4>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	689b      	ldr	r3, [r3, #8]
 800047a:	4618      	mov	r0, r3
 800047c:	f000 fad8 	bl	8000a30 <fflush>
    	    for(uint32_t i=0;i<=300000;i++);
 8000480:	2300      	movs	r3, #0
 8000482:	63fb      	str	r3, [r7, #60]	; 0x3c
 8000484:	e002      	b.n	800048c <main+0x2a4>
 8000486:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000488:	3301      	adds	r3, #1
 800048a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800048c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800048e:	4a88      	ldr	r2, [pc, #544]	; (80006b0 <main+0x4c8>)
 8000490:	4293      	cmp	r3, r2
 8000492:	d9f8      	bls.n	8000486 <main+0x29e>
 8000494:	e019      	b.n	80004ca <main+0x2e2>
    	}
    	else if(pPortDInReg->pin_11==0){
 8000496:	68bb      	ldr	r3, [r7, #8]
 8000498:	681b      	ldr	r3, [r3, #0]
 800049a:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800049e:	b2db      	uxtb	r3, r3
 80004a0:	2b00      	cmp	r3, #0
 80004a2:	d112      	bne.n	80004ca <main+0x2e2>
    	    printf("B");
 80004a4:	2042      	movs	r0, #66	; 0x42
 80004a6:	f000 fcdb 	bl	8000e60 <putchar>
    	    fflush(stdout);
 80004aa:	4b80      	ldr	r3, [pc, #512]	; (80006ac <main+0x4c4>)
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	689b      	ldr	r3, [r3, #8]
 80004b0:	4618      	mov	r0, r3
 80004b2:	f000 fabd 	bl	8000a30 <fflush>
    	    for(uint32_t i=0;i<=300000;i++);
 80004b6:	2300      	movs	r3, #0
 80004b8:	63bb      	str	r3, [r7, #56]	; 0x38
 80004ba:	e002      	b.n	80004c2 <main+0x2da>
 80004bc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80004be:	3301      	adds	r3, #1
 80004c0:	63bb      	str	r3, [r7, #56]	; 0x38
 80004c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80004c4:	4a7a      	ldr	r2, [pc, #488]	; (80006b0 <main+0x4c8>)
 80004c6:	4293      	cmp	r3, r2
 80004c8:	d9f8      	bls.n	80004bc <main+0x2d4>
    	}
    	pPortDOutReg->pin_1=1;
 80004ca:	68fa      	ldr	r2, [r7, #12]
 80004cc:	6813      	ldr	r3, [r2, #0]
 80004ce:	f043 0302 	orr.w	r3, r3, #2
 80004d2:	6013      	str	r3, [r2, #0]


    	pPortDOutReg->pin_2=0; //Satır kontrol etme
 80004d4:	68fa      	ldr	r2, [r7, #12]
 80004d6:	6813      	ldr	r3, [r2, #0]
 80004d8:	f36f 0382 	bfc	r3, #2, #1
 80004dc:	6013      	str	r3, [r2, #0]
    	if(pPortDInReg->pin_8==0){
 80004de:	68bb      	ldr	r3, [r7, #8]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	f3c3 2300 	ubfx	r3, r3, #8, #1
 80004e6:	b2db      	uxtb	r3, r3
 80004e8:	2b00      	cmp	r3, #0
 80004ea:	d113      	bne.n	8000514 <main+0x32c>
    		printf("7");
 80004ec:	2037      	movs	r0, #55	; 0x37
 80004ee:	f000 fcb7 	bl	8000e60 <putchar>
    		fflush(stdout);
 80004f2:	4b6e      	ldr	r3, [pc, #440]	; (80006ac <main+0x4c4>)
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	689b      	ldr	r3, [r3, #8]
 80004f8:	4618      	mov	r0, r3
 80004fa:	f000 fa99 	bl	8000a30 <fflush>
    		for(uint32_t i=0;i<=300000;i++);
 80004fe:	2300      	movs	r3, #0
 8000500:	637b      	str	r3, [r7, #52]	; 0x34
 8000502:	e002      	b.n	800050a <main+0x322>
 8000504:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000506:	3301      	adds	r3, #1
 8000508:	637b      	str	r3, [r7, #52]	; 0x34
 800050a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800050c:	4a68      	ldr	r2, [pc, #416]	; (80006b0 <main+0x4c8>)
 800050e:	4293      	cmp	r3, r2
 8000510:	d9f8      	bls.n	8000504 <main+0x31c>
 8000512:	e04f      	b.n	80005b4 <main+0x3cc>
    	}
    	else if(pPortDInReg->pin_9==0){
 8000514:	68bb      	ldr	r3, [r7, #8]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800051c:	b2db      	uxtb	r3, r3
 800051e:	2b00      	cmp	r3, #0
 8000520:	d113      	bne.n	800054a <main+0x362>
    		printf("8");
 8000522:	2038      	movs	r0, #56	; 0x38
 8000524:	f000 fc9c 	bl	8000e60 <putchar>
    		fflush(stdout);
 8000528:	4b60      	ldr	r3, [pc, #384]	; (80006ac <main+0x4c4>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	689b      	ldr	r3, [r3, #8]
 800052e:	4618      	mov	r0, r3
 8000530:	f000 fa7e 	bl	8000a30 <fflush>
    		for(uint32_t i=0;i<=300000;i++);
 8000534:	2300      	movs	r3, #0
 8000536:	633b      	str	r3, [r7, #48]	; 0x30
 8000538:	e002      	b.n	8000540 <main+0x358>
 800053a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800053c:	3301      	adds	r3, #1
 800053e:	633b      	str	r3, [r7, #48]	; 0x30
 8000540:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000542:	4a5b      	ldr	r2, [pc, #364]	; (80006b0 <main+0x4c8>)
 8000544:	4293      	cmp	r3, r2
 8000546:	d9f8      	bls.n	800053a <main+0x352>
 8000548:	e034      	b.n	80005b4 <main+0x3cc>
    	}
    	else if(pPortDInReg->pin_10==0){
 800054a:	68bb      	ldr	r3, [r7, #8]
 800054c:	681b      	ldr	r3, [r3, #0]
 800054e:	f3c3 2380 	ubfx	r3, r3, #10, #1
 8000552:	b2db      	uxtb	r3, r3
 8000554:	2b00      	cmp	r3, #0
 8000556:	d113      	bne.n	8000580 <main+0x398>
    	    printf("9");
 8000558:	2039      	movs	r0, #57	; 0x39
 800055a:	f000 fc81 	bl	8000e60 <putchar>
    	    fflush(stdout);
 800055e:	4b53      	ldr	r3, [pc, #332]	; (80006ac <main+0x4c4>)
 8000560:	681b      	ldr	r3, [r3, #0]
 8000562:	689b      	ldr	r3, [r3, #8]
 8000564:	4618      	mov	r0, r3
 8000566:	f000 fa63 	bl	8000a30 <fflush>
    	    for(uint32_t i=0;i<=300000;i++);
 800056a:	2300      	movs	r3, #0
 800056c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800056e:	e002      	b.n	8000576 <main+0x38e>
 8000570:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000572:	3301      	adds	r3, #1
 8000574:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000576:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000578:	4a4d      	ldr	r2, [pc, #308]	; (80006b0 <main+0x4c8>)
 800057a:	4293      	cmp	r3, r2
 800057c:	d9f8      	bls.n	8000570 <main+0x388>
 800057e:	e019      	b.n	80005b4 <main+0x3cc>
    	}
    	else if(pPortDInReg->pin_11==0){
 8000580:	68bb      	ldr	r3, [r7, #8]
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 8000588:	b2db      	uxtb	r3, r3
 800058a:	2b00      	cmp	r3, #0
 800058c:	d112      	bne.n	80005b4 <main+0x3cc>
    	    printf("C");
 800058e:	2043      	movs	r0, #67	; 0x43
 8000590:	f000 fc66 	bl	8000e60 <putchar>
    	    fflush(stdout);
 8000594:	4b45      	ldr	r3, [pc, #276]	; (80006ac <main+0x4c4>)
 8000596:	681b      	ldr	r3, [r3, #0]
 8000598:	689b      	ldr	r3, [r3, #8]
 800059a:	4618      	mov	r0, r3
 800059c:	f000 fa48 	bl	8000a30 <fflush>
    	    for(uint32_t i=0;i<=300000;i++);
 80005a0:	2300      	movs	r3, #0
 80005a2:	62bb      	str	r3, [r7, #40]	; 0x28
 80005a4:	e002      	b.n	80005ac <main+0x3c4>
 80005a6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80005a8:	3301      	adds	r3, #1
 80005aa:	62bb      	str	r3, [r7, #40]	; 0x28
 80005ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80005ae:	4a40      	ldr	r2, [pc, #256]	; (80006b0 <main+0x4c8>)
 80005b0:	4293      	cmp	r3, r2
 80005b2:	d9f8      	bls.n	80005a6 <main+0x3be>
    	}
    	pPortDOutReg->pin_2=1;
 80005b4:	68fa      	ldr	r2, [r7, #12]
 80005b6:	6813      	ldr	r3, [r2, #0]
 80005b8:	f043 0304 	orr.w	r3, r3, #4
 80005bc:	6013      	str	r3, [r2, #0]


    	pPortDOutReg->pin_3=0; //Satır kontrol etme
 80005be:	68fa      	ldr	r2, [r7, #12]
 80005c0:	6813      	ldr	r3, [r2, #0]
 80005c2:	f36f 03c3 	bfc	r3, #3, #1
 80005c6:	6013      	str	r3, [r2, #0]
    	if(pPortDInReg->pin_8==0){
 80005c8:	68bb      	ldr	r3, [r7, #8]
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	f3c3 2300 	ubfx	r3, r3, #8, #1
 80005d0:	b2db      	uxtb	r3, r3
 80005d2:	2b00      	cmp	r3, #0
 80005d4:	d113      	bne.n	80005fe <main+0x416>
    		printf("*");
 80005d6:	202a      	movs	r0, #42	; 0x2a
 80005d8:	f000 fc42 	bl	8000e60 <putchar>
    		fflush(stdout);
 80005dc:	4b33      	ldr	r3, [pc, #204]	; (80006ac <main+0x4c4>)
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	689b      	ldr	r3, [r3, #8]
 80005e2:	4618      	mov	r0, r3
 80005e4:	f000 fa24 	bl	8000a30 <fflush>
    		for(uint32_t i=0;i<=300000;i++);
 80005e8:	2300      	movs	r3, #0
 80005ea:	627b      	str	r3, [r7, #36]	; 0x24
 80005ec:	e002      	b.n	80005f4 <main+0x40c>
 80005ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005f0:	3301      	adds	r3, #1
 80005f2:	627b      	str	r3, [r7, #36]	; 0x24
 80005f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80005f6:	4a2e      	ldr	r2, [pc, #184]	; (80006b0 <main+0x4c8>)
 80005f8:	4293      	cmp	r3, r2
 80005fa:	d9f8      	bls.n	80005ee <main+0x406>
 80005fc:	e04f      	b.n	800069e <main+0x4b6>
    	}
    	else if(pPortDInReg->pin_9==0){
 80005fe:	68bb      	ldr	r3, [r7, #8]
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	f3c3 2340 	ubfx	r3, r3, #9, #1
 8000606:	b2db      	uxtb	r3, r3
 8000608:	2b00      	cmp	r3, #0
 800060a:	d113      	bne.n	8000634 <main+0x44c>
    		printf("0");
 800060c:	2030      	movs	r0, #48	; 0x30
 800060e:	f000 fc27 	bl	8000e60 <putchar>
    		fflush(stdout);
 8000612:	4b26      	ldr	r3, [pc, #152]	; (80006ac <main+0x4c4>)
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	689b      	ldr	r3, [r3, #8]
 8000618:	4618      	mov	r0, r3
 800061a:	f000 fa09 	bl	8000a30 <fflush>
    		for(uint32_t i=0;i<=300000;i++);
 800061e:	2300      	movs	r3, #0
 8000620:	623b      	str	r3, [r7, #32]
 8000622:	e002      	b.n	800062a <main+0x442>
 8000624:	6a3b      	ldr	r3, [r7, #32]
 8000626:	3301      	adds	r3, #1
 8000628:	623b      	str	r3, [r7, #32]
 800062a:	6a3b      	ldr	r3, [r7, #32]
 800062c:	4a20      	ldr	r2, [pc, #128]	; (80006b0 <main+0x4c8>)
 800062e:	4293      	cmp	r3, r2
 8000630:	d9f8      	bls.n	8000624 <main+0x43c>
 8000632:	e034      	b.n	800069e <main+0x4b6>
    	}
    	else if(pPortDInReg->pin_10==0){
 8000634:	68bb      	ldr	r3, [r7, #8]
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800063c:	b2db      	uxtb	r3, r3
 800063e:	2b00      	cmp	r3, #0
 8000640:	d113      	bne.n	800066a <main+0x482>
    	    printf("#");
 8000642:	2023      	movs	r0, #35	; 0x23
 8000644:	f000 fc0c 	bl	8000e60 <putchar>
    	    fflush(stdout);
 8000648:	4b18      	ldr	r3, [pc, #96]	; (80006ac <main+0x4c4>)
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	689b      	ldr	r3, [r3, #8]
 800064e:	4618      	mov	r0, r3
 8000650:	f000 f9ee 	bl	8000a30 <fflush>
    	    for(uint32_t i=0;i<=300000;i++);
 8000654:	2300      	movs	r3, #0
 8000656:	61fb      	str	r3, [r7, #28]
 8000658:	e002      	b.n	8000660 <main+0x478>
 800065a:	69fb      	ldr	r3, [r7, #28]
 800065c:	3301      	adds	r3, #1
 800065e:	61fb      	str	r3, [r7, #28]
 8000660:	69fb      	ldr	r3, [r7, #28]
 8000662:	4a13      	ldr	r2, [pc, #76]	; (80006b0 <main+0x4c8>)
 8000664:	4293      	cmp	r3, r2
 8000666:	d9f8      	bls.n	800065a <main+0x472>
 8000668:	e019      	b.n	800069e <main+0x4b6>
    	}
    	else if(pPortDInReg->pin_11==0){
 800066a:	68bb      	ldr	r3, [r7, #8]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 8000672:	b2db      	uxtb	r3, r3
 8000674:	2b00      	cmp	r3, #0
 8000676:	d112      	bne.n	800069e <main+0x4b6>
    	    printf("D");
 8000678:	2044      	movs	r0, #68	; 0x44
 800067a:	f000 fbf1 	bl	8000e60 <putchar>
    	    fflush(stdout);
 800067e:	4b0b      	ldr	r3, [pc, #44]	; (80006ac <main+0x4c4>)
 8000680:	681b      	ldr	r3, [r3, #0]
 8000682:	689b      	ldr	r3, [r3, #8]
 8000684:	4618      	mov	r0, r3
 8000686:	f000 f9d3 	bl	8000a30 <fflush>
    	    for(uint32_t i=0;i<=300000;i++);
 800068a:	2300      	movs	r3, #0
 800068c:	61bb      	str	r3, [r7, #24]
 800068e:	e002      	b.n	8000696 <main+0x4ae>
 8000690:	69bb      	ldr	r3, [r7, #24]
 8000692:	3301      	adds	r3, #1
 8000694:	61bb      	str	r3, [r7, #24]
 8000696:	69bb      	ldr	r3, [r7, #24]
 8000698:	4a05      	ldr	r2, [pc, #20]	; (80006b0 <main+0x4c8>)
 800069a:	4293      	cmp	r3, r2
 800069c:	d9f8      	bls.n	8000690 <main+0x4a8>
    	}
    	pPortDOutReg->pin_3=1;
 800069e:	68fa      	ldr	r2, [r7, #12]
 80006a0:	6813      	ldr	r3, [r2, #0]
 80006a2:	f043 0308 	orr.w	r3, r3, #8
 80006a6:	6013      	str	r3, [r2, #0]
    	pPortDOutReg->pin_0=0; //Satır kontrol etme
 80006a8:	e61c      	b.n	80002e4 <main+0xfc>
 80006aa:	bf00      	nop
 80006ac:	20000000 	.word	0x20000000
 80006b0:	000493e0 	.word	0x000493e0

080006b4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80006b4:	b480      	push	{r7}
 80006b6:	b083      	sub	sp, #12
 80006b8:	af00      	add	r7, sp, #0
 80006ba:	4603      	mov	r3, r0
 80006bc:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80006be:	4b0f      	ldr	r3, [pc, #60]	; (80006fc <ITM_SendChar+0x48>)
 80006c0:	681b      	ldr	r3, [r3, #0]
 80006c2:	4a0e      	ldr	r2, [pc, #56]	; (80006fc <ITM_SendChar+0x48>)
 80006c4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80006c8:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80006ca:	4b0d      	ldr	r3, [pc, #52]	; (8000700 <ITM_SendChar+0x4c>)
 80006cc:	681b      	ldr	r3, [r3, #0]
 80006ce:	4a0c      	ldr	r2, [pc, #48]	; (8000700 <ITM_SendChar+0x4c>)
 80006d0:	f043 0301 	orr.w	r3, r3, #1
 80006d4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80006d6:	bf00      	nop
 80006d8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	f003 0301 	and.w	r3, r3, #1
 80006e2:	2b00      	cmp	r3, #0
 80006e4:	d0f8      	beq.n	80006d8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80006e6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80006ea:	79fb      	ldrb	r3, [r7, #7]
 80006ec:	6013      	str	r3, [r2, #0]
}
 80006ee:	bf00      	nop
 80006f0:	370c      	adds	r7, #12
 80006f2:	46bd      	mov	sp, r7
 80006f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f8:	4770      	bx	lr
 80006fa:	bf00      	nop
 80006fc:	e000edfc 	.word	0xe000edfc
 8000700:	e0000e00 	.word	0xe0000e00

08000704 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000704:	b580      	push	{r7, lr}
 8000706:	b086      	sub	sp, #24
 8000708:	af00      	add	r7, sp, #0
 800070a:	60f8      	str	r0, [r7, #12]
 800070c:	60b9      	str	r1, [r7, #8]
 800070e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000710:	2300      	movs	r3, #0
 8000712:	617b      	str	r3, [r7, #20]
 8000714:	e00a      	b.n	800072c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000716:	f3af 8000 	nop.w
 800071a:	4601      	mov	r1, r0
 800071c:	68bb      	ldr	r3, [r7, #8]
 800071e:	1c5a      	adds	r2, r3, #1
 8000720:	60ba      	str	r2, [r7, #8]
 8000722:	b2ca      	uxtb	r2, r1
 8000724:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000726:	697b      	ldr	r3, [r7, #20]
 8000728:	3301      	adds	r3, #1
 800072a:	617b      	str	r3, [r7, #20]
 800072c:	697a      	ldr	r2, [r7, #20]
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	429a      	cmp	r2, r3
 8000732:	dbf0      	blt.n	8000716 <_read+0x12>
  }

  return len;
 8000734:	687b      	ldr	r3, [r7, #4]
}
 8000736:	4618      	mov	r0, r3
 8000738:	3718      	adds	r7, #24
 800073a:	46bd      	mov	sp, r7
 800073c:	bd80      	pop	{r7, pc}

0800073e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800073e:	b580      	push	{r7, lr}
 8000740:	b086      	sub	sp, #24
 8000742:	af00      	add	r7, sp, #0
 8000744:	60f8      	str	r0, [r7, #12]
 8000746:	60b9      	str	r1, [r7, #8]
 8000748:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800074a:	2300      	movs	r3, #0
 800074c:	617b      	str	r3, [r7, #20]
 800074e:	e009      	b.n	8000764 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000750:	68bb      	ldr	r3, [r7, #8]
 8000752:	1c5a      	adds	r2, r3, #1
 8000754:	60ba      	str	r2, [r7, #8]
 8000756:	781b      	ldrb	r3, [r3, #0]
 8000758:	4618      	mov	r0, r3
 800075a:	f7ff ffab 	bl	80006b4 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800075e:	697b      	ldr	r3, [r7, #20]
 8000760:	3301      	adds	r3, #1
 8000762:	617b      	str	r3, [r7, #20]
 8000764:	697a      	ldr	r2, [r7, #20]
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	429a      	cmp	r2, r3
 800076a:	dbf1      	blt.n	8000750 <_write+0x12>
  }
  return len;
 800076c:	687b      	ldr	r3, [r7, #4]
}
 800076e:	4618      	mov	r0, r3
 8000770:	3718      	adds	r7, #24
 8000772:	46bd      	mov	sp, r7
 8000774:	bd80      	pop	{r7, pc}

08000776 <_close>:

int _close(int file)
{
 8000776:	b480      	push	{r7}
 8000778:	b083      	sub	sp, #12
 800077a:	af00      	add	r7, sp, #0
 800077c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800077e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000782:	4618      	mov	r0, r3
 8000784:	370c      	adds	r7, #12
 8000786:	46bd      	mov	sp, r7
 8000788:	f85d 7b04 	ldr.w	r7, [sp], #4
 800078c:	4770      	bx	lr

0800078e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800078e:	b480      	push	{r7}
 8000790:	b083      	sub	sp, #12
 8000792:	af00      	add	r7, sp, #0
 8000794:	6078      	str	r0, [r7, #4]
 8000796:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000798:	683b      	ldr	r3, [r7, #0]
 800079a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800079e:	605a      	str	r2, [r3, #4]
  return 0;
 80007a0:	2300      	movs	r3, #0
}
 80007a2:	4618      	mov	r0, r3
 80007a4:	370c      	adds	r7, #12
 80007a6:	46bd      	mov	sp, r7
 80007a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ac:	4770      	bx	lr

080007ae <_isatty>:

int _isatty(int file)
{
 80007ae:	b480      	push	{r7}
 80007b0:	b083      	sub	sp, #12
 80007b2:	af00      	add	r7, sp, #0
 80007b4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80007b6:	2301      	movs	r3, #1
}
 80007b8:	4618      	mov	r0, r3
 80007ba:	370c      	adds	r7, #12
 80007bc:	46bd      	mov	sp, r7
 80007be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007c2:	4770      	bx	lr

080007c4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80007c4:	b480      	push	{r7}
 80007c6:	b085      	sub	sp, #20
 80007c8:	af00      	add	r7, sp, #0
 80007ca:	60f8      	str	r0, [r7, #12]
 80007cc:	60b9      	str	r1, [r7, #8]
 80007ce:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80007d0:	2300      	movs	r3, #0
}
 80007d2:	4618      	mov	r0, r3
 80007d4:	3714      	adds	r7, #20
 80007d6:	46bd      	mov	sp, r7
 80007d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007dc:	4770      	bx	lr
	...

080007e0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80007e0:	b580      	push	{r7, lr}
 80007e2:	b086      	sub	sp, #24
 80007e4:	af00      	add	r7, sp, #0
 80007e6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80007e8:	4a14      	ldr	r2, [pc, #80]	; (800083c <_sbrk+0x5c>)
 80007ea:	4b15      	ldr	r3, [pc, #84]	; (8000840 <_sbrk+0x60>)
 80007ec:	1ad3      	subs	r3, r2, r3
 80007ee:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80007f0:	697b      	ldr	r3, [r7, #20]
 80007f2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80007f4:	4b13      	ldr	r3, [pc, #76]	; (8000844 <_sbrk+0x64>)
 80007f6:	681b      	ldr	r3, [r3, #0]
 80007f8:	2b00      	cmp	r3, #0
 80007fa:	d102      	bne.n	8000802 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80007fc:	4b11      	ldr	r3, [pc, #68]	; (8000844 <_sbrk+0x64>)
 80007fe:	4a12      	ldr	r2, [pc, #72]	; (8000848 <_sbrk+0x68>)
 8000800:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000802:	4b10      	ldr	r3, [pc, #64]	; (8000844 <_sbrk+0x64>)
 8000804:	681a      	ldr	r2, [r3, #0]
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	4413      	add	r3, r2
 800080a:	693a      	ldr	r2, [r7, #16]
 800080c:	429a      	cmp	r2, r3
 800080e:	d207      	bcs.n	8000820 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000810:	f000 f846 	bl	80008a0 <__errno>
 8000814:	4603      	mov	r3, r0
 8000816:	220c      	movs	r2, #12
 8000818:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800081a:	f04f 33ff 	mov.w	r3, #4294967295
 800081e:	e009      	b.n	8000834 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000820:	4b08      	ldr	r3, [pc, #32]	; (8000844 <_sbrk+0x64>)
 8000822:	681b      	ldr	r3, [r3, #0]
 8000824:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000826:	4b07      	ldr	r3, [pc, #28]	; (8000844 <_sbrk+0x64>)
 8000828:	681a      	ldr	r2, [r3, #0]
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	4413      	add	r3, r2
 800082e:	4a05      	ldr	r2, [pc, #20]	; (8000844 <_sbrk+0x64>)
 8000830:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000832:	68fb      	ldr	r3, [r7, #12]
}
 8000834:	4618      	mov	r0, r3
 8000836:	3718      	adds	r7, #24
 8000838:	46bd      	mov	sp, r7
 800083a:	bd80      	pop	{r7, pc}
 800083c:	20020000 	.word	0x20020000
 8000840:	00000400 	.word	0x00000400
 8000844:	20000080 	.word	0x20000080
 8000848:	20000098 	.word	0x20000098

0800084c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800084c:	480d      	ldr	r0, [pc, #52]	; (8000884 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800084e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000850:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000854:	480c      	ldr	r0, [pc, #48]	; (8000888 <LoopForever+0x6>)
  ldr r1, =_edata
 8000856:	490d      	ldr	r1, [pc, #52]	; (800088c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000858:	4a0d      	ldr	r2, [pc, #52]	; (8000890 <LoopForever+0xe>)
  movs r3, #0
 800085a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800085c:	e002      	b.n	8000864 <LoopCopyDataInit>

0800085e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800085e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000860:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000862:	3304      	adds	r3, #4

08000864 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000864:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000866:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000868:	d3f9      	bcc.n	800085e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800086a:	4a0a      	ldr	r2, [pc, #40]	; (8000894 <LoopForever+0x12>)
  ldr r4, =_ebss
 800086c:	4c0a      	ldr	r4, [pc, #40]	; (8000898 <LoopForever+0x16>)
  movs r3, #0
 800086e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000870:	e001      	b.n	8000876 <LoopFillZerobss>

08000872 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000872:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000874:	3204      	adds	r2, #4

08000876 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000876:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000878:	d3fb      	bcc.n	8000872 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800087a:	f000 f9e1 	bl	8000c40 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800087e:	f7ff fcb3 	bl	80001e8 <main>

08000882 <LoopForever>:

LoopForever:
  b LoopForever
 8000882:	e7fe      	b.n	8000882 <LoopForever>
  ldr   r0, =_estack
 8000884:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000888:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800088c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000890:	0800137c 	.word	0x0800137c
  ldr r2, =_sbss
 8000894:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000898:	20000094 	.word	0x20000094

0800089c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800089c:	e7fe      	b.n	800089c <ADC_IRQHandler>
	...

080008a0 <__errno>:
 80008a0:	4b01      	ldr	r3, [pc, #4]	; (80008a8 <__errno+0x8>)
 80008a2:	6818      	ldr	r0, [r3, #0]
 80008a4:	4770      	bx	lr
 80008a6:	bf00      	nop
 80008a8:	20000000 	.word	0x20000000

080008ac <__sflush_r>:
 80008ac:	898a      	ldrh	r2, [r1, #12]
 80008ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008b2:	4605      	mov	r5, r0
 80008b4:	0710      	lsls	r0, r2, #28
 80008b6:	460c      	mov	r4, r1
 80008b8:	d458      	bmi.n	800096c <__sflush_r+0xc0>
 80008ba:	684b      	ldr	r3, [r1, #4]
 80008bc:	2b00      	cmp	r3, #0
 80008be:	dc05      	bgt.n	80008cc <__sflush_r+0x20>
 80008c0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008c2:	2b00      	cmp	r3, #0
 80008c4:	dc02      	bgt.n	80008cc <__sflush_r+0x20>
 80008c6:	2000      	movs	r0, #0
 80008c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008cc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008ce:	2e00      	cmp	r6, #0
 80008d0:	d0f9      	beq.n	80008c6 <__sflush_r+0x1a>
 80008d2:	2300      	movs	r3, #0
 80008d4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008d8:	682f      	ldr	r7, [r5, #0]
 80008da:	602b      	str	r3, [r5, #0]
 80008dc:	d032      	beq.n	8000944 <__sflush_r+0x98>
 80008de:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008e0:	89a3      	ldrh	r3, [r4, #12]
 80008e2:	075a      	lsls	r2, r3, #29
 80008e4:	d505      	bpl.n	80008f2 <__sflush_r+0x46>
 80008e6:	6863      	ldr	r3, [r4, #4]
 80008e8:	1ac0      	subs	r0, r0, r3
 80008ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008ec:	b10b      	cbz	r3, 80008f2 <__sflush_r+0x46>
 80008ee:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008f0:	1ac0      	subs	r0, r0, r3
 80008f2:	2300      	movs	r3, #0
 80008f4:	4602      	mov	r2, r0
 80008f6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008f8:	6a21      	ldr	r1, [r4, #32]
 80008fa:	4628      	mov	r0, r5
 80008fc:	47b0      	blx	r6
 80008fe:	1c43      	adds	r3, r0, #1
 8000900:	89a3      	ldrh	r3, [r4, #12]
 8000902:	d106      	bne.n	8000912 <__sflush_r+0x66>
 8000904:	6829      	ldr	r1, [r5, #0]
 8000906:	291d      	cmp	r1, #29
 8000908:	d82c      	bhi.n	8000964 <__sflush_r+0xb8>
 800090a:	4a2a      	ldr	r2, [pc, #168]	; (80009b4 <__sflush_r+0x108>)
 800090c:	40ca      	lsrs	r2, r1
 800090e:	07d6      	lsls	r6, r2, #31
 8000910:	d528      	bpl.n	8000964 <__sflush_r+0xb8>
 8000912:	2200      	movs	r2, #0
 8000914:	6062      	str	r2, [r4, #4]
 8000916:	04d9      	lsls	r1, r3, #19
 8000918:	6922      	ldr	r2, [r4, #16]
 800091a:	6022      	str	r2, [r4, #0]
 800091c:	d504      	bpl.n	8000928 <__sflush_r+0x7c>
 800091e:	1c42      	adds	r2, r0, #1
 8000920:	d101      	bne.n	8000926 <__sflush_r+0x7a>
 8000922:	682b      	ldr	r3, [r5, #0]
 8000924:	b903      	cbnz	r3, 8000928 <__sflush_r+0x7c>
 8000926:	6560      	str	r0, [r4, #84]	; 0x54
 8000928:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800092a:	602f      	str	r7, [r5, #0]
 800092c:	2900      	cmp	r1, #0
 800092e:	d0ca      	beq.n	80008c6 <__sflush_r+0x1a>
 8000930:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000934:	4299      	cmp	r1, r3
 8000936:	d002      	beq.n	800093e <__sflush_r+0x92>
 8000938:	4628      	mov	r0, r5
 800093a:	f000 f9b1 	bl	8000ca0 <_free_r>
 800093e:	2000      	movs	r0, #0
 8000940:	6360      	str	r0, [r4, #52]	; 0x34
 8000942:	e7c1      	b.n	80008c8 <__sflush_r+0x1c>
 8000944:	6a21      	ldr	r1, [r4, #32]
 8000946:	2301      	movs	r3, #1
 8000948:	4628      	mov	r0, r5
 800094a:	47b0      	blx	r6
 800094c:	1c41      	adds	r1, r0, #1
 800094e:	d1c7      	bne.n	80008e0 <__sflush_r+0x34>
 8000950:	682b      	ldr	r3, [r5, #0]
 8000952:	2b00      	cmp	r3, #0
 8000954:	d0c4      	beq.n	80008e0 <__sflush_r+0x34>
 8000956:	2b1d      	cmp	r3, #29
 8000958:	d001      	beq.n	800095e <__sflush_r+0xb2>
 800095a:	2b16      	cmp	r3, #22
 800095c:	d101      	bne.n	8000962 <__sflush_r+0xb6>
 800095e:	602f      	str	r7, [r5, #0]
 8000960:	e7b1      	b.n	80008c6 <__sflush_r+0x1a>
 8000962:	89a3      	ldrh	r3, [r4, #12]
 8000964:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000968:	81a3      	strh	r3, [r4, #12]
 800096a:	e7ad      	b.n	80008c8 <__sflush_r+0x1c>
 800096c:	690f      	ldr	r7, [r1, #16]
 800096e:	2f00      	cmp	r7, #0
 8000970:	d0a9      	beq.n	80008c6 <__sflush_r+0x1a>
 8000972:	0793      	lsls	r3, r2, #30
 8000974:	680e      	ldr	r6, [r1, #0]
 8000976:	bf08      	it	eq
 8000978:	694b      	ldreq	r3, [r1, #20]
 800097a:	600f      	str	r7, [r1, #0]
 800097c:	bf18      	it	ne
 800097e:	2300      	movne	r3, #0
 8000980:	eba6 0807 	sub.w	r8, r6, r7
 8000984:	608b      	str	r3, [r1, #8]
 8000986:	f1b8 0f00 	cmp.w	r8, #0
 800098a:	dd9c      	ble.n	80008c6 <__sflush_r+0x1a>
 800098c:	6a21      	ldr	r1, [r4, #32]
 800098e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000990:	4643      	mov	r3, r8
 8000992:	463a      	mov	r2, r7
 8000994:	4628      	mov	r0, r5
 8000996:	47b0      	blx	r6
 8000998:	2800      	cmp	r0, #0
 800099a:	dc06      	bgt.n	80009aa <__sflush_r+0xfe>
 800099c:	89a3      	ldrh	r3, [r4, #12]
 800099e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009a2:	81a3      	strh	r3, [r4, #12]
 80009a4:	f04f 30ff 	mov.w	r0, #4294967295
 80009a8:	e78e      	b.n	80008c8 <__sflush_r+0x1c>
 80009aa:	4407      	add	r7, r0
 80009ac:	eba8 0800 	sub.w	r8, r8, r0
 80009b0:	e7e9      	b.n	8000986 <__sflush_r+0xda>
 80009b2:	bf00      	nop
 80009b4:	20400001 	.word	0x20400001

080009b8 <_fflush_r>:
 80009b8:	b538      	push	{r3, r4, r5, lr}
 80009ba:	690b      	ldr	r3, [r1, #16]
 80009bc:	4605      	mov	r5, r0
 80009be:	460c      	mov	r4, r1
 80009c0:	b913      	cbnz	r3, 80009c8 <_fflush_r+0x10>
 80009c2:	2500      	movs	r5, #0
 80009c4:	4628      	mov	r0, r5
 80009c6:	bd38      	pop	{r3, r4, r5, pc}
 80009c8:	b118      	cbz	r0, 80009d2 <_fflush_r+0x1a>
 80009ca:	6983      	ldr	r3, [r0, #24]
 80009cc:	b90b      	cbnz	r3, 80009d2 <_fflush_r+0x1a>
 80009ce:	f000 f899 	bl	8000b04 <__sinit>
 80009d2:	4b14      	ldr	r3, [pc, #80]	; (8000a24 <_fflush_r+0x6c>)
 80009d4:	429c      	cmp	r4, r3
 80009d6:	d11b      	bne.n	8000a10 <_fflush_r+0x58>
 80009d8:	686c      	ldr	r4, [r5, #4]
 80009da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009de:	2b00      	cmp	r3, #0
 80009e0:	d0ef      	beq.n	80009c2 <_fflush_r+0xa>
 80009e2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80009e4:	07d0      	lsls	r0, r2, #31
 80009e6:	d404      	bmi.n	80009f2 <_fflush_r+0x3a>
 80009e8:	0599      	lsls	r1, r3, #22
 80009ea:	d402      	bmi.n	80009f2 <_fflush_r+0x3a>
 80009ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009ee:	f000 f94c 	bl	8000c8a <__retarget_lock_acquire_recursive>
 80009f2:	4628      	mov	r0, r5
 80009f4:	4621      	mov	r1, r4
 80009f6:	f7ff ff59 	bl	80008ac <__sflush_r>
 80009fa:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009fc:	07da      	lsls	r2, r3, #31
 80009fe:	4605      	mov	r5, r0
 8000a00:	d4e0      	bmi.n	80009c4 <_fflush_r+0xc>
 8000a02:	89a3      	ldrh	r3, [r4, #12]
 8000a04:	059b      	lsls	r3, r3, #22
 8000a06:	d4dd      	bmi.n	80009c4 <_fflush_r+0xc>
 8000a08:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a0a:	f000 f93f 	bl	8000c8c <__retarget_lock_release_recursive>
 8000a0e:	e7d9      	b.n	80009c4 <_fflush_r+0xc>
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_fflush_r+0x70>)
 8000a12:	429c      	cmp	r4, r3
 8000a14:	d101      	bne.n	8000a1a <_fflush_r+0x62>
 8000a16:	68ac      	ldr	r4, [r5, #8]
 8000a18:	e7df      	b.n	80009da <_fflush_r+0x22>
 8000a1a:	4b04      	ldr	r3, [pc, #16]	; (8000a2c <_fflush_r+0x74>)
 8000a1c:	429c      	cmp	r4, r3
 8000a1e:	bf08      	it	eq
 8000a20:	68ec      	ldreq	r4, [r5, #12]
 8000a22:	e7da      	b.n	80009da <_fflush_r+0x22>
 8000a24:	08001330 	.word	0x08001330
 8000a28:	08001350 	.word	0x08001350
 8000a2c:	08001310 	.word	0x08001310

08000a30 <fflush>:
 8000a30:	4601      	mov	r1, r0
 8000a32:	b920      	cbnz	r0, 8000a3e <fflush+0xe>
 8000a34:	4b04      	ldr	r3, [pc, #16]	; (8000a48 <fflush+0x18>)
 8000a36:	4905      	ldr	r1, [pc, #20]	; (8000a4c <fflush+0x1c>)
 8000a38:	6818      	ldr	r0, [r3, #0]
 8000a3a:	f000 b8e1 	b.w	8000c00 <_fwalk_reent>
 8000a3e:	4b04      	ldr	r3, [pc, #16]	; (8000a50 <fflush+0x20>)
 8000a40:	6818      	ldr	r0, [r3, #0]
 8000a42:	f7ff bfb9 	b.w	80009b8 <_fflush_r>
 8000a46:	bf00      	nop
 8000a48:	08001370 	.word	0x08001370
 8000a4c:	080009b9 	.word	0x080009b9
 8000a50:	20000000 	.word	0x20000000

08000a54 <std>:
 8000a54:	2300      	movs	r3, #0
 8000a56:	b510      	push	{r4, lr}
 8000a58:	4604      	mov	r4, r0
 8000a5a:	e9c0 3300 	strd	r3, r3, [r0]
 8000a5e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a62:	6083      	str	r3, [r0, #8]
 8000a64:	8181      	strh	r1, [r0, #12]
 8000a66:	6643      	str	r3, [r0, #100]	; 0x64
 8000a68:	81c2      	strh	r2, [r0, #14]
 8000a6a:	6183      	str	r3, [r0, #24]
 8000a6c:	4619      	mov	r1, r3
 8000a6e:	2208      	movs	r2, #8
 8000a70:	305c      	adds	r0, #92	; 0x5c
 8000a72:	f000 f90c 	bl	8000c8e <memset>
 8000a76:	4b05      	ldr	r3, [pc, #20]	; (8000a8c <std+0x38>)
 8000a78:	6263      	str	r3, [r4, #36]	; 0x24
 8000a7a:	4b05      	ldr	r3, [pc, #20]	; (8000a90 <std+0x3c>)
 8000a7c:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a7e:	4b05      	ldr	r3, [pc, #20]	; (8000a94 <std+0x40>)
 8000a80:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a82:	4b05      	ldr	r3, [pc, #20]	; (8000a98 <std+0x44>)
 8000a84:	6224      	str	r4, [r4, #32]
 8000a86:	6323      	str	r3, [r4, #48]	; 0x30
 8000a88:	bd10      	pop	{r4, pc}
 8000a8a:	bf00      	nop
 8000a8c:	08000ead 	.word	0x08000ead
 8000a90:	08000ecf 	.word	0x08000ecf
 8000a94:	08000f07 	.word	0x08000f07
 8000a98:	08000f2b 	.word	0x08000f2b

08000a9c <_cleanup_r>:
 8000a9c:	4901      	ldr	r1, [pc, #4]	; (8000aa4 <_cleanup_r+0x8>)
 8000a9e:	f000 b8af 	b.w	8000c00 <_fwalk_reent>
 8000aa2:	bf00      	nop
 8000aa4:	080009b9 	.word	0x080009b9

08000aa8 <__sfmoreglue>:
 8000aa8:	b570      	push	{r4, r5, r6, lr}
 8000aaa:	2268      	movs	r2, #104	; 0x68
 8000aac:	1e4d      	subs	r5, r1, #1
 8000aae:	4355      	muls	r5, r2
 8000ab0:	460e      	mov	r6, r1
 8000ab2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000ab6:	f000 f95f 	bl	8000d78 <_malloc_r>
 8000aba:	4604      	mov	r4, r0
 8000abc:	b140      	cbz	r0, 8000ad0 <__sfmoreglue+0x28>
 8000abe:	2100      	movs	r1, #0
 8000ac0:	e9c0 1600 	strd	r1, r6, [r0]
 8000ac4:	300c      	adds	r0, #12
 8000ac6:	60a0      	str	r0, [r4, #8]
 8000ac8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000acc:	f000 f8df 	bl	8000c8e <memset>
 8000ad0:	4620      	mov	r0, r4
 8000ad2:	bd70      	pop	{r4, r5, r6, pc}

08000ad4 <__sfp_lock_acquire>:
 8000ad4:	4801      	ldr	r0, [pc, #4]	; (8000adc <__sfp_lock_acquire+0x8>)
 8000ad6:	f000 b8d8 	b.w	8000c8a <__retarget_lock_acquire_recursive>
 8000ada:	bf00      	nop
 8000adc:	20000085 	.word	0x20000085

08000ae0 <__sfp_lock_release>:
 8000ae0:	4801      	ldr	r0, [pc, #4]	; (8000ae8 <__sfp_lock_release+0x8>)
 8000ae2:	f000 b8d3 	b.w	8000c8c <__retarget_lock_release_recursive>
 8000ae6:	bf00      	nop
 8000ae8:	20000085 	.word	0x20000085

08000aec <__sinit_lock_acquire>:
 8000aec:	4801      	ldr	r0, [pc, #4]	; (8000af4 <__sinit_lock_acquire+0x8>)
 8000aee:	f000 b8cc 	b.w	8000c8a <__retarget_lock_acquire_recursive>
 8000af2:	bf00      	nop
 8000af4:	20000086 	.word	0x20000086

08000af8 <__sinit_lock_release>:
 8000af8:	4801      	ldr	r0, [pc, #4]	; (8000b00 <__sinit_lock_release+0x8>)
 8000afa:	f000 b8c7 	b.w	8000c8c <__retarget_lock_release_recursive>
 8000afe:	bf00      	nop
 8000b00:	20000086 	.word	0x20000086

08000b04 <__sinit>:
 8000b04:	b510      	push	{r4, lr}
 8000b06:	4604      	mov	r4, r0
 8000b08:	f7ff fff0 	bl	8000aec <__sinit_lock_acquire>
 8000b0c:	69a3      	ldr	r3, [r4, #24]
 8000b0e:	b11b      	cbz	r3, 8000b18 <__sinit+0x14>
 8000b10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000b14:	f7ff bff0 	b.w	8000af8 <__sinit_lock_release>
 8000b18:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000b1c:	6523      	str	r3, [r4, #80]	; 0x50
 8000b1e:	4b13      	ldr	r3, [pc, #76]	; (8000b6c <__sinit+0x68>)
 8000b20:	4a13      	ldr	r2, [pc, #76]	; (8000b70 <__sinit+0x6c>)
 8000b22:	681b      	ldr	r3, [r3, #0]
 8000b24:	62a2      	str	r2, [r4, #40]	; 0x28
 8000b26:	42a3      	cmp	r3, r4
 8000b28:	bf04      	itt	eq
 8000b2a:	2301      	moveq	r3, #1
 8000b2c:	61a3      	streq	r3, [r4, #24]
 8000b2e:	4620      	mov	r0, r4
 8000b30:	f000 f820 	bl	8000b74 <__sfp>
 8000b34:	6060      	str	r0, [r4, #4]
 8000b36:	4620      	mov	r0, r4
 8000b38:	f000 f81c 	bl	8000b74 <__sfp>
 8000b3c:	60a0      	str	r0, [r4, #8]
 8000b3e:	4620      	mov	r0, r4
 8000b40:	f000 f818 	bl	8000b74 <__sfp>
 8000b44:	2200      	movs	r2, #0
 8000b46:	60e0      	str	r0, [r4, #12]
 8000b48:	2104      	movs	r1, #4
 8000b4a:	6860      	ldr	r0, [r4, #4]
 8000b4c:	f7ff ff82 	bl	8000a54 <std>
 8000b50:	68a0      	ldr	r0, [r4, #8]
 8000b52:	2201      	movs	r2, #1
 8000b54:	2109      	movs	r1, #9
 8000b56:	f7ff ff7d 	bl	8000a54 <std>
 8000b5a:	68e0      	ldr	r0, [r4, #12]
 8000b5c:	2202      	movs	r2, #2
 8000b5e:	2112      	movs	r1, #18
 8000b60:	f7ff ff78 	bl	8000a54 <std>
 8000b64:	2301      	movs	r3, #1
 8000b66:	61a3      	str	r3, [r4, #24]
 8000b68:	e7d2      	b.n	8000b10 <__sinit+0xc>
 8000b6a:	bf00      	nop
 8000b6c:	08001370 	.word	0x08001370
 8000b70:	08000a9d 	.word	0x08000a9d

08000b74 <__sfp>:
 8000b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b76:	4607      	mov	r7, r0
 8000b78:	f7ff ffac 	bl	8000ad4 <__sfp_lock_acquire>
 8000b7c:	4b1e      	ldr	r3, [pc, #120]	; (8000bf8 <__sfp+0x84>)
 8000b7e:	681e      	ldr	r6, [r3, #0]
 8000b80:	69b3      	ldr	r3, [r6, #24]
 8000b82:	b913      	cbnz	r3, 8000b8a <__sfp+0x16>
 8000b84:	4630      	mov	r0, r6
 8000b86:	f7ff ffbd 	bl	8000b04 <__sinit>
 8000b8a:	3648      	adds	r6, #72	; 0x48
 8000b8c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b90:	3b01      	subs	r3, #1
 8000b92:	d503      	bpl.n	8000b9c <__sfp+0x28>
 8000b94:	6833      	ldr	r3, [r6, #0]
 8000b96:	b30b      	cbz	r3, 8000bdc <__sfp+0x68>
 8000b98:	6836      	ldr	r6, [r6, #0]
 8000b9a:	e7f7      	b.n	8000b8c <__sfp+0x18>
 8000b9c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000ba0:	b9d5      	cbnz	r5, 8000bd8 <__sfp+0x64>
 8000ba2:	4b16      	ldr	r3, [pc, #88]	; (8000bfc <__sfp+0x88>)
 8000ba4:	60e3      	str	r3, [r4, #12]
 8000ba6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000baa:	6665      	str	r5, [r4, #100]	; 0x64
 8000bac:	f000 f86c 	bl	8000c88 <__retarget_lock_init_recursive>
 8000bb0:	f7ff ff96 	bl	8000ae0 <__sfp_lock_release>
 8000bb4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000bb8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000bbc:	6025      	str	r5, [r4, #0]
 8000bbe:	61a5      	str	r5, [r4, #24]
 8000bc0:	2208      	movs	r2, #8
 8000bc2:	4629      	mov	r1, r5
 8000bc4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000bc8:	f000 f861 	bl	8000c8e <memset>
 8000bcc:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000bd0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000bd4:	4620      	mov	r0, r4
 8000bd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000bd8:	3468      	adds	r4, #104	; 0x68
 8000bda:	e7d9      	b.n	8000b90 <__sfp+0x1c>
 8000bdc:	2104      	movs	r1, #4
 8000bde:	4638      	mov	r0, r7
 8000be0:	f7ff ff62 	bl	8000aa8 <__sfmoreglue>
 8000be4:	4604      	mov	r4, r0
 8000be6:	6030      	str	r0, [r6, #0]
 8000be8:	2800      	cmp	r0, #0
 8000bea:	d1d5      	bne.n	8000b98 <__sfp+0x24>
 8000bec:	f7ff ff78 	bl	8000ae0 <__sfp_lock_release>
 8000bf0:	230c      	movs	r3, #12
 8000bf2:	603b      	str	r3, [r7, #0]
 8000bf4:	e7ee      	b.n	8000bd4 <__sfp+0x60>
 8000bf6:	bf00      	nop
 8000bf8:	08001370 	.word	0x08001370
 8000bfc:	ffff0001 	.word	0xffff0001

08000c00 <_fwalk_reent>:
 8000c00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c04:	4606      	mov	r6, r0
 8000c06:	4688      	mov	r8, r1
 8000c08:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000c0c:	2700      	movs	r7, #0
 8000c0e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000c12:	f1b9 0901 	subs.w	r9, r9, #1
 8000c16:	d505      	bpl.n	8000c24 <_fwalk_reent+0x24>
 8000c18:	6824      	ldr	r4, [r4, #0]
 8000c1a:	2c00      	cmp	r4, #0
 8000c1c:	d1f7      	bne.n	8000c0e <_fwalk_reent+0xe>
 8000c1e:	4638      	mov	r0, r7
 8000c20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c24:	89ab      	ldrh	r3, [r5, #12]
 8000c26:	2b01      	cmp	r3, #1
 8000c28:	d907      	bls.n	8000c3a <_fwalk_reent+0x3a>
 8000c2a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c2e:	3301      	adds	r3, #1
 8000c30:	d003      	beq.n	8000c3a <_fwalk_reent+0x3a>
 8000c32:	4629      	mov	r1, r5
 8000c34:	4630      	mov	r0, r6
 8000c36:	47c0      	blx	r8
 8000c38:	4307      	orrs	r7, r0
 8000c3a:	3568      	adds	r5, #104	; 0x68
 8000c3c:	e7e9      	b.n	8000c12 <_fwalk_reent+0x12>
	...

08000c40 <__libc_init_array>:
 8000c40:	b570      	push	{r4, r5, r6, lr}
 8000c42:	4d0d      	ldr	r5, [pc, #52]	; (8000c78 <__libc_init_array+0x38>)
 8000c44:	4c0d      	ldr	r4, [pc, #52]	; (8000c7c <__libc_init_array+0x3c>)
 8000c46:	1b64      	subs	r4, r4, r5
 8000c48:	10a4      	asrs	r4, r4, #2
 8000c4a:	2600      	movs	r6, #0
 8000c4c:	42a6      	cmp	r6, r4
 8000c4e:	d109      	bne.n	8000c64 <__libc_init_array+0x24>
 8000c50:	4d0b      	ldr	r5, [pc, #44]	; (8000c80 <__libc_init_array+0x40>)
 8000c52:	4c0c      	ldr	r4, [pc, #48]	; (8000c84 <__libc_init_array+0x44>)
 8000c54:	f000 fb50 	bl	80012f8 <_init>
 8000c58:	1b64      	subs	r4, r4, r5
 8000c5a:	10a4      	asrs	r4, r4, #2
 8000c5c:	2600      	movs	r6, #0
 8000c5e:	42a6      	cmp	r6, r4
 8000c60:	d105      	bne.n	8000c6e <__libc_init_array+0x2e>
 8000c62:	bd70      	pop	{r4, r5, r6, pc}
 8000c64:	f855 3b04 	ldr.w	r3, [r5], #4
 8000c68:	4798      	blx	r3
 8000c6a:	3601      	adds	r6, #1
 8000c6c:	e7ee      	b.n	8000c4c <__libc_init_array+0xc>
 8000c6e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000c72:	4798      	blx	r3
 8000c74:	3601      	adds	r6, #1
 8000c76:	e7f2      	b.n	8000c5e <__libc_init_array+0x1e>
 8000c78:	08001374 	.word	0x08001374
 8000c7c:	08001374 	.word	0x08001374
 8000c80:	08001374 	.word	0x08001374
 8000c84:	08001378 	.word	0x08001378

08000c88 <__retarget_lock_init_recursive>:
 8000c88:	4770      	bx	lr

08000c8a <__retarget_lock_acquire_recursive>:
 8000c8a:	4770      	bx	lr

08000c8c <__retarget_lock_release_recursive>:
 8000c8c:	4770      	bx	lr

08000c8e <memset>:
 8000c8e:	4402      	add	r2, r0
 8000c90:	4603      	mov	r3, r0
 8000c92:	4293      	cmp	r3, r2
 8000c94:	d100      	bne.n	8000c98 <memset+0xa>
 8000c96:	4770      	bx	lr
 8000c98:	f803 1b01 	strb.w	r1, [r3], #1
 8000c9c:	e7f9      	b.n	8000c92 <memset+0x4>
	...

08000ca0 <_free_r>:
 8000ca0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000ca2:	2900      	cmp	r1, #0
 8000ca4:	d044      	beq.n	8000d30 <_free_r+0x90>
 8000ca6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000caa:	9001      	str	r0, [sp, #4]
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	f1a1 0404 	sub.w	r4, r1, #4
 8000cb2:	bfb8      	it	lt
 8000cb4:	18e4      	addlt	r4, r4, r3
 8000cb6:	f000 f971 	bl	8000f9c <__malloc_lock>
 8000cba:	4a1e      	ldr	r2, [pc, #120]	; (8000d34 <_free_r+0x94>)
 8000cbc:	9801      	ldr	r0, [sp, #4]
 8000cbe:	6813      	ldr	r3, [r2, #0]
 8000cc0:	b933      	cbnz	r3, 8000cd0 <_free_r+0x30>
 8000cc2:	6063      	str	r3, [r4, #4]
 8000cc4:	6014      	str	r4, [r2, #0]
 8000cc6:	b003      	add	sp, #12
 8000cc8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000ccc:	f000 b96c 	b.w	8000fa8 <__malloc_unlock>
 8000cd0:	42a3      	cmp	r3, r4
 8000cd2:	d908      	bls.n	8000ce6 <_free_r+0x46>
 8000cd4:	6825      	ldr	r5, [r4, #0]
 8000cd6:	1961      	adds	r1, r4, r5
 8000cd8:	428b      	cmp	r3, r1
 8000cda:	bf01      	itttt	eq
 8000cdc:	6819      	ldreq	r1, [r3, #0]
 8000cde:	685b      	ldreq	r3, [r3, #4]
 8000ce0:	1949      	addeq	r1, r1, r5
 8000ce2:	6021      	streq	r1, [r4, #0]
 8000ce4:	e7ed      	b.n	8000cc2 <_free_r+0x22>
 8000ce6:	461a      	mov	r2, r3
 8000ce8:	685b      	ldr	r3, [r3, #4]
 8000cea:	b10b      	cbz	r3, 8000cf0 <_free_r+0x50>
 8000cec:	42a3      	cmp	r3, r4
 8000cee:	d9fa      	bls.n	8000ce6 <_free_r+0x46>
 8000cf0:	6811      	ldr	r1, [r2, #0]
 8000cf2:	1855      	adds	r5, r2, r1
 8000cf4:	42a5      	cmp	r5, r4
 8000cf6:	d10b      	bne.n	8000d10 <_free_r+0x70>
 8000cf8:	6824      	ldr	r4, [r4, #0]
 8000cfa:	4421      	add	r1, r4
 8000cfc:	1854      	adds	r4, r2, r1
 8000cfe:	42a3      	cmp	r3, r4
 8000d00:	6011      	str	r1, [r2, #0]
 8000d02:	d1e0      	bne.n	8000cc6 <_free_r+0x26>
 8000d04:	681c      	ldr	r4, [r3, #0]
 8000d06:	685b      	ldr	r3, [r3, #4]
 8000d08:	6053      	str	r3, [r2, #4]
 8000d0a:	4421      	add	r1, r4
 8000d0c:	6011      	str	r1, [r2, #0]
 8000d0e:	e7da      	b.n	8000cc6 <_free_r+0x26>
 8000d10:	d902      	bls.n	8000d18 <_free_r+0x78>
 8000d12:	230c      	movs	r3, #12
 8000d14:	6003      	str	r3, [r0, #0]
 8000d16:	e7d6      	b.n	8000cc6 <_free_r+0x26>
 8000d18:	6825      	ldr	r5, [r4, #0]
 8000d1a:	1961      	adds	r1, r4, r5
 8000d1c:	428b      	cmp	r3, r1
 8000d1e:	bf04      	itt	eq
 8000d20:	6819      	ldreq	r1, [r3, #0]
 8000d22:	685b      	ldreq	r3, [r3, #4]
 8000d24:	6063      	str	r3, [r4, #4]
 8000d26:	bf04      	itt	eq
 8000d28:	1949      	addeq	r1, r1, r5
 8000d2a:	6021      	streq	r1, [r4, #0]
 8000d2c:	6054      	str	r4, [r2, #4]
 8000d2e:	e7ca      	b.n	8000cc6 <_free_r+0x26>
 8000d30:	b003      	add	sp, #12
 8000d32:	bd30      	pop	{r4, r5, pc}
 8000d34:	20000088 	.word	0x20000088

08000d38 <sbrk_aligned>:
 8000d38:	b570      	push	{r4, r5, r6, lr}
 8000d3a:	4e0e      	ldr	r6, [pc, #56]	; (8000d74 <sbrk_aligned+0x3c>)
 8000d3c:	460c      	mov	r4, r1
 8000d3e:	6831      	ldr	r1, [r6, #0]
 8000d40:	4605      	mov	r5, r0
 8000d42:	b911      	cbnz	r1, 8000d4a <sbrk_aligned+0x12>
 8000d44:	f000 f8a2 	bl	8000e8c <_sbrk_r>
 8000d48:	6030      	str	r0, [r6, #0]
 8000d4a:	4621      	mov	r1, r4
 8000d4c:	4628      	mov	r0, r5
 8000d4e:	f000 f89d 	bl	8000e8c <_sbrk_r>
 8000d52:	1c43      	adds	r3, r0, #1
 8000d54:	d00a      	beq.n	8000d6c <sbrk_aligned+0x34>
 8000d56:	1cc4      	adds	r4, r0, #3
 8000d58:	f024 0403 	bic.w	r4, r4, #3
 8000d5c:	42a0      	cmp	r0, r4
 8000d5e:	d007      	beq.n	8000d70 <sbrk_aligned+0x38>
 8000d60:	1a21      	subs	r1, r4, r0
 8000d62:	4628      	mov	r0, r5
 8000d64:	f000 f892 	bl	8000e8c <_sbrk_r>
 8000d68:	3001      	adds	r0, #1
 8000d6a:	d101      	bne.n	8000d70 <sbrk_aligned+0x38>
 8000d6c:	f04f 34ff 	mov.w	r4, #4294967295
 8000d70:	4620      	mov	r0, r4
 8000d72:	bd70      	pop	{r4, r5, r6, pc}
 8000d74:	2000008c 	.word	0x2000008c

08000d78 <_malloc_r>:
 8000d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d7c:	1ccd      	adds	r5, r1, #3
 8000d7e:	f025 0503 	bic.w	r5, r5, #3
 8000d82:	3508      	adds	r5, #8
 8000d84:	2d0c      	cmp	r5, #12
 8000d86:	bf38      	it	cc
 8000d88:	250c      	movcc	r5, #12
 8000d8a:	2d00      	cmp	r5, #0
 8000d8c:	4607      	mov	r7, r0
 8000d8e:	db01      	blt.n	8000d94 <_malloc_r+0x1c>
 8000d90:	42a9      	cmp	r1, r5
 8000d92:	d905      	bls.n	8000da0 <_malloc_r+0x28>
 8000d94:	230c      	movs	r3, #12
 8000d96:	603b      	str	r3, [r7, #0]
 8000d98:	2600      	movs	r6, #0
 8000d9a:	4630      	mov	r0, r6
 8000d9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000da0:	4e2e      	ldr	r6, [pc, #184]	; (8000e5c <_malloc_r+0xe4>)
 8000da2:	f000 f8fb 	bl	8000f9c <__malloc_lock>
 8000da6:	6833      	ldr	r3, [r6, #0]
 8000da8:	461c      	mov	r4, r3
 8000daa:	bb34      	cbnz	r4, 8000dfa <_malloc_r+0x82>
 8000dac:	4629      	mov	r1, r5
 8000dae:	4638      	mov	r0, r7
 8000db0:	f7ff ffc2 	bl	8000d38 <sbrk_aligned>
 8000db4:	1c43      	adds	r3, r0, #1
 8000db6:	4604      	mov	r4, r0
 8000db8:	d14d      	bne.n	8000e56 <_malloc_r+0xde>
 8000dba:	6834      	ldr	r4, [r6, #0]
 8000dbc:	4626      	mov	r6, r4
 8000dbe:	2e00      	cmp	r6, #0
 8000dc0:	d140      	bne.n	8000e44 <_malloc_r+0xcc>
 8000dc2:	6823      	ldr	r3, [r4, #0]
 8000dc4:	4631      	mov	r1, r6
 8000dc6:	4638      	mov	r0, r7
 8000dc8:	eb04 0803 	add.w	r8, r4, r3
 8000dcc:	f000 f85e 	bl	8000e8c <_sbrk_r>
 8000dd0:	4580      	cmp	r8, r0
 8000dd2:	d13a      	bne.n	8000e4a <_malloc_r+0xd2>
 8000dd4:	6821      	ldr	r1, [r4, #0]
 8000dd6:	3503      	adds	r5, #3
 8000dd8:	1a6d      	subs	r5, r5, r1
 8000dda:	f025 0503 	bic.w	r5, r5, #3
 8000dde:	3508      	adds	r5, #8
 8000de0:	2d0c      	cmp	r5, #12
 8000de2:	bf38      	it	cc
 8000de4:	250c      	movcc	r5, #12
 8000de6:	4629      	mov	r1, r5
 8000de8:	4638      	mov	r0, r7
 8000dea:	f7ff ffa5 	bl	8000d38 <sbrk_aligned>
 8000dee:	3001      	adds	r0, #1
 8000df0:	d02b      	beq.n	8000e4a <_malloc_r+0xd2>
 8000df2:	6823      	ldr	r3, [r4, #0]
 8000df4:	442b      	add	r3, r5
 8000df6:	6023      	str	r3, [r4, #0]
 8000df8:	e00e      	b.n	8000e18 <_malloc_r+0xa0>
 8000dfa:	6822      	ldr	r2, [r4, #0]
 8000dfc:	1b52      	subs	r2, r2, r5
 8000dfe:	d41e      	bmi.n	8000e3e <_malloc_r+0xc6>
 8000e00:	2a0b      	cmp	r2, #11
 8000e02:	d916      	bls.n	8000e32 <_malloc_r+0xba>
 8000e04:	1961      	adds	r1, r4, r5
 8000e06:	42a3      	cmp	r3, r4
 8000e08:	6025      	str	r5, [r4, #0]
 8000e0a:	bf18      	it	ne
 8000e0c:	6059      	strne	r1, [r3, #4]
 8000e0e:	6863      	ldr	r3, [r4, #4]
 8000e10:	bf08      	it	eq
 8000e12:	6031      	streq	r1, [r6, #0]
 8000e14:	5162      	str	r2, [r4, r5]
 8000e16:	604b      	str	r3, [r1, #4]
 8000e18:	4638      	mov	r0, r7
 8000e1a:	f104 060b 	add.w	r6, r4, #11
 8000e1e:	f000 f8c3 	bl	8000fa8 <__malloc_unlock>
 8000e22:	f026 0607 	bic.w	r6, r6, #7
 8000e26:	1d23      	adds	r3, r4, #4
 8000e28:	1af2      	subs	r2, r6, r3
 8000e2a:	d0b6      	beq.n	8000d9a <_malloc_r+0x22>
 8000e2c:	1b9b      	subs	r3, r3, r6
 8000e2e:	50a3      	str	r3, [r4, r2]
 8000e30:	e7b3      	b.n	8000d9a <_malloc_r+0x22>
 8000e32:	6862      	ldr	r2, [r4, #4]
 8000e34:	42a3      	cmp	r3, r4
 8000e36:	bf0c      	ite	eq
 8000e38:	6032      	streq	r2, [r6, #0]
 8000e3a:	605a      	strne	r2, [r3, #4]
 8000e3c:	e7ec      	b.n	8000e18 <_malloc_r+0xa0>
 8000e3e:	4623      	mov	r3, r4
 8000e40:	6864      	ldr	r4, [r4, #4]
 8000e42:	e7b2      	b.n	8000daa <_malloc_r+0x32>
 8000e44:	4634      	mov	r4, r6
 8000e46:	6876      	ldr	r6, [r6, #4]
 8000e48:	e7b9      	b.n	8000dbe <_malloc_r+0x46>
 8000e4a:	230c      	movs	r3, #12
 8000e4c:	603b      	str	r3, [r7, #0]
 8000e4e:	4638      	mov	r0, r7
 8000e50:	f000 f8aa 	bl	8000fa8 <__malloc_unlock>
 8000e54:	e7a1      	b.n	8000d9a <_malloc_r+0x22>
 8000e56:	6025      	str	r5, [r4, #0]
 8000e58:	e7de      	b.n	8000e18 <_malloc_r+0xa0>
 8000e5a:	bf00      	nop
 8000e5c:	20000088 	.word	0x20000088

08000e60 <putchar>:
 8000e60:	4b09      	ldr	r3, [pc, #36]	; (8000e88 <putchar+0x28>)
 8000e62:	b513      	push	{r0, r1, r4, lr}
 8000e64:	681c      	ldr	r4, [r3, #0]
 8000e66:	4601      	mov	r1, r0
 8000e68:	b134      	cbz	r4, 8000e78 <putchar+0x18>
 8000e6a:	69a3      	ldr	r3, [r4, #24]
 8000e6c:	b923      	cbnz	r3, 8000e78 <putchar+0x18>
 8000e6e:	9001      	str	r0, [sp, #4]
 8000e70:	4620      	mov	r0, r4
 8000e72:	f7ff fe47 	bl	8000b04 <__sinit>
 8000e76:	9901      	ldr	r1, [sp, #4]
 8000e78:	68a2      	ldr	r2, [r4, #8]
 8000e7a:	4620      	mov	r0, r4
 8000e7c:	b002      	add	sp, #8
 8000e7e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000e82:	f000 b897 	b.w	8000fb4 <_putc_r>
 8000e86:	bf00      	nop
 8000e88:	20000000 	.word	0x20000000

08000e8c <_sbrk_r>:
 8000e8c:	b538      	push	{r3, r4, r5, lr}
 8000e8e:	4d06      	ldr	r5, [pc, #24]	; (8000ea8 <_sbrk_r+0x1c>)
 8000e90:	2300      	movs	r3, #0
 8000e92:	4604      	mov	r4, r0
 8000e94:	4608      	mov	r0, r1
 8000e96:	602b      	str	r3, [r5, #0]
 8000e98:	f7ff fca2 	bl	80007e0 <_sbrk>
 8000e9c:	1c43      	adds	r3, r0, #1
 8000e9e:	d102      	bne.n	8000ea6 <_sbrk_r+0x1a>
 8000ea0:	682b      	ldr	r3, [r5, #0]
 8000ea2:	b103      	cbz	r3, 8000ea6 <_sbrk_r+0x1a>
 8000ea4:	6023      	str	r3, [r4, #0]
 8000ea6:	bd38      	pop	{r3, r4, r5, pc}
 8000ea8:	20000090 	.word	0x20000090

08000eac <__sread>:
 8000eac:	b510      	push	{r4, lr}
 8000eae:	460c      	mov	r4, r1
 8000eb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000eb4:	f000 f8c6 	bl	8001044 <_read_r>
 8000eb8:	2800      	cmp	r0, #0
 8000eba:	bfab      	itete	ge
 8000ebc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000ebe:	89a3      	ldrhlt	r3, [r4, #12]
 8000ec0:	181b      	addge	r3, r3, r0
 8000ec2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ec6:	bfac      	ite	ge
 8000ec8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000eca:	81a3      	strhlt	r3, [r4, #12]
 8000ecc:	bd10      	pop	{r4, pc}

08000ece <__swrite>:
 8000ece:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ed2:	461f      	mov	r7, r3
 8000ed4:	898b      	ldrh	r3, [r1, #12]
 8000ed6:	05db      	lsls	r3, r3, #23
 8000ed8:	4605      	mov	r5, r0
 8000eda:	460c      	mov	r4, r1
 8000edc:	4616      	mov	r6, r2
 8000ede:	d505      	bpl.n	8000eec <__swrite+0x1e>
 8000ee0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ee4:	2302      	movs	r3, #2
 8000ee6:	2200      	movs	r2, #0
 8000ee8:	f000 f846 	bl	8000f78 <_lseek_r>
 8000eec:	89a3      	ldrh	r3, [r4, #12]
 8000eee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ef2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ef6:	81a3      	strh	r3, [r4, #12]
 8000ef8:	4632      	mov	r2, r6
 8000efa:	463b      	mov	r3, r7
 8000efc:	4628      	mov	r0, r5
 8000efe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f02:	f000 b817 	b.w	8000f34 <_write_r>

08000f06 <__sseek>:
 8000f06:	b510      	push	{r4, lr}
 8000f08:	460c      	mov	r4, r1
 8000f0a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f0e:	f000 f833 	bl	8000f78 <_lseek_r>
 8000f12:	1c43      	adds	r3, r0, #1
 8000f14:	89a3      	ldrh	r3, [r4, #12]
 8000f16:	bf15      	itete	ne
 8000f18:	6560      	strne	r0, [r4, #84]	; 0x54
 8000f1a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000f1e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000f22:	81a3      	strheq	r3, [r4, #12]
 8000f24:	bf18      	it	ne
 8000f26:	81a3      	strhne	r3, [r4, #12]
 8000f28:	bd10      	pop	{r4, pc}

08000f2a <__sclose>:
 8000f2a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f2e:	f000 b813 	b.w	8000f58 <_close_r>
	...

08000f34 <_write_r>:
 8000f34:	b538      	push	{r3, r4, r5, lr}
 8000f36:	4d07      	ldr	r5, [pc, #28]	; (8000f54 <_write_r+0x20>)
 8000f38:	4604      	mov	r4, r0
 8000f3a:	4608      	mov	r0, r1
 8000f3c:	4611      	mov	r1, r2
 8000f3e:	2200      	movs	r2, #0
 8000f40:	602a      	str	r2, [r5, #0]
 8000f42:	461a      	mov	r2, r3
 8000f44:	f7ff fbfb 	bl	800073e <_write>
 8000f48:	1c43      	adds	r3, r0, #1
 8000f4a:	d102      	bne.n	8000f52 <_write_r+0x1e>
 8000f4c:	682b      	ldr	r3, [r5, #0]
 8000f4e:	b103      	cbz	r3, 8000f52 <_write_r+0x1e>
 8000f50:	6023      	str	r3, [r4, #0]
 8000f52:	bd38      	pop	{r3, r4, r5, pc}
 8000f54:	20000090 	.word	0x20000090

08000f58 <_close_r>:
 8000f58:	b538      	push	{r3, r4, r5, lr}
 8000f5a:	4d06      	ldr	r5, [pc, #24]	; (8000f74 <_close_r+0x1c>)
 8000f5c:	2300      	movs	r3, #0
 8000f5e:	4604      	mov	r4, r0
 8000f60:	4608      	mov	r0, r1
 8000f62:	602b      	str	r3, [r5, #0]
 8000f64:	f7ff fc07 	bl	8000776 <_close>
 8000f68:	1c43      	adds	r3, r0, #1
 8000f6a:	d102      	bne.n	8000f72 <_close_r+0x1a>
 8000f6c:	682b      	ldr	r3, [r5, #0]
 8000f6e:	b103      	cbz	r3, 8000f72 <_close_r+0x1a>
 8000f70:	6023      	str	r3, [r4, #0]
 8000f72:	bd38      	pop	{r3, r4, r5, pc}
 8000f74:	20000090 	.word	0x20000090

08000f78 <_lseek_r>:
 8000f78:	b538      	push	{r3, r4, r5, lr}
 8000f7a:	4d07      	ldr	r5, [pc, #28]	; (8000f98 <_lseek_r+0x20>)
 8000f7c:	4604      	mov	r4, r0
 8000f7e:	4608      	mov	r0, r1
 8000f80:	4611      	mov	r1, r2
 8000f82:	2200      	movs	r2, #0
 8000f84:	602a      	str	r2, [r5, #0]
 8000f86:	461a      	mov	r2, r3
 8000f88:	f7ff fc1c 	bl	80007c4 <_lseek>
 8000f8c:	1c43      	adds	r3, r0, #1
 8000f8e:	d102      	bne.n	8000f96 <_lseek_r+0x1e>
 8000f90:	682b      	ldr	r3, [r5, #0]
 8000f92:	b103      	cbz	r3, 8000f96 <_lseek_r+0x1e>
 8000f94:	6023      	str	r3, [r4, #0]
 8000f96:	bd38      	pop	{r3, r4, r5, pc}
 8000f98:	20000090 	.word	0x20000090

08000f9c <__malloc_lock>:
 8000f9c:	4801      	ldr	r0, [pc, #4]	; (8000fa4 <__malloc_lock+0x8>)
 8000f9e:	f7ff be74 	b.w	8000c8a <__retarget_lock_acquire_recursive>
 8000fa2:	bf00      	nop
 8000fa4:	20000084 	.word	0x20000084

08000fa8 <__malloc_unlock>:
 8000fa8:	4801      	ldr	r0, [pc, #4]	; (8000fb0 <__malloc_unlock+0x8>)
 8000faa:	f7ff be6f 	b.w	8000c8c <__retarget_lock_release_recursive>
 8000fae:	bf00      	nop
 8000fb0:	20000084 	.word	0x20000084

08000fb4 <_putc_r>:
 8000fb4:	b570      	push	{r4, r5, r6, lr}
 8000fb6:	460d      	mov	r5, r1
 8000fb8:	4614      	mov	r4, r2
 8000fba:	4606      	mov	r6, r0
 8000fbc:	b118      	cbz	r0, 8000fc6 <_putc_r+0x12>
 8000fbe:	6983      	ldr	r3, [r0, #24]
 8000fc0:	b90b      	cbnz	r3, 8000fc6 <_putc_r+0x12>
 8000fc2:	f7ff fd9f 	bl	8000b04 <__sinit>
 8000fc6:	4b1c      	ldr	r3, [pc, #112]	; (8001038 <_putc_r+0x84>)
 8000fc8:	429c      	cmp	r4, r3
 8000fca:	d124      	bne.n	8001016 <_putc_r+0x62>
 8000fcc:	6874      	ldr	r4, [r6, #4]
 8000fce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000fd0:	07d8      	lsls	r0, r3, #31
 8000fd2:	d405      	bmi.n	8000fe0 <_putc_r+0x2c>
 8000fd4:	89a3      	ldrh	r3, [r4, #12]
 8000fd6:	0599      	lsls	r1, r3, #22
 8000fd8:	d402      	bmi.n	8000fe0 <_putc_r+0x2c>
 8000fda:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000fdc:	f7ff fe55 	bl	8000c8a <__retarget_lock_acquire_recursive>
 8000fe0:	68a3      	ldr	r3, [r4, #8]
 8000fe2:	3b01      	subs	r3, #1
 8000fe4:	2b00      	cmp	r3, #0
 8000fe6:	60a3      	str	r3, [r4, #8]
 8000fe8:	da05      	bge.n	8000ff6 <_putc_r+0x42>
 8000fea:	69a2      	ldr	r2, [r4, #24]
 8000fec:	4293      	cmp	r3, r2
 8000fee:	db1c      	blt.n	800102a <_putc_r+0x76>
 8000ff0:	b2eb      	uxtb	r3, r5
 8000ff2:	2b0a      	cmp	r3, #10
 8000ff4:	d019      	beq.n	800102a <_putc_r+0x76>
 8000ff6:	6823      	ldr	r3, [r4, #0]
 8000ff8:	1c5a      	adds	r2, r3, #1
 8000ffa:	6022      	str	r2, [r4, #0]
 8000ffc:	701d      	strb	r5, [r3, #0]
 8000ffe:	b2ed      	uxtb	r5, r5
 8001000:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001002:	07da      	lsls	r2, r3, #31
 8001004:	d405      	bmi.n	8001012 <_putc_r+0x5e>
 8001006:	89a3      	ldrh	r3, [r4, #12]
 8001008:	059b      	lsls	r3, r3, #22
 800100a:	d402      	bmi.n	8001012 <_putc_r+0x5e>
 800100c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800100e:	f7ff fe3d 	bl	8000c8c <__retarget_lock_release_recursive>
 8001012:	4628      	mov	r0, r5
 8001014:	bd70      	pop	{r4, r5, r6, pc}
 8001016:	4b09      	ldr	r3, [pc, #36]	; (800103c <_putc_r+0x88>)
 8001018:	429c      	cmp	r4, r3
 800101a:	d101      	bne.n	8001020 <_putc_r+0x6c>
 800101c:	68b4      	ldr	r4, [r6, #8]
 800101e:	e7d6      	b.n	8000fce <_putc_r+0x1a>
 8001020:	4b07      	ldr	r3, [pc, #28]	; (8001040 <_putc_r+0x8c>)
 8001022:	429c      	cmp	r4, r3
 8001024:	bf08      	it	eq
 8001026:	68f4      	ldreq	r4, [r6, #12]
 8001028:	e7d1      	b.n	8000fce <_putc_r+0x1a>
 800102a:	4629      	mov	r1, r5
 800102c:	4622      	mov	r2, r4
 800102e:	4630      	mov	r0, r6
 8001030:	f000 f81a 	bl	8001068 <__swbuf_r>
 8001034:	4605      	mov	r5, r0
 8001036:	e7e3      	b.n	8001000 <_putc_r+0x4c>
 8001038:	08001330 	.word	0x08001330
 800103c:	08001350 	.word	0x08001350
 8001040:	08001310 	.word	0x08001310

08001044 <_read_r>:
 8001044:	b538      	push	{r3, r4, r5, lr}
 8001046:	4d07      	ldr	r5, [pc, #28]	; (8001064 <_read_r+0x20>)
 8001048:	4604      	mov	r4, r0
 800104a:	4608      	mov	r0, r1
 800104c:	4611      	mov	r1, r2
 800104e:	2200      	movs	r2, #0
 8001050:	602a      	str	r2, [r5, #0]
 8001052:	461a      	mov	r2, r3
 8001054:	f7ff fb56 	bl	8000704 <_read>
 8001058:	1c43      	adds	r3, r0, #1
 800105a:	d102      	bne.n	8001062 <_read_r+0x1e>
 800105c:	682b      	ldr	r3, [r5, #0]
 800105e:	b103      	cbz	r3, 8001062 <_read_r+0x1e>
 8001060:	6023      	str	r3, [r4, #0]
 8001062:	bd38      	pop	{r3, r4, r5, pc}
 8001064:	20000090 	.word	0x20000090

08001068 <__swbuf_r>:
 8001068:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800106a:	460e      	mov	r6, r1
 800106c:	4614      	mov	r4, r2
 800106e:	4605      	mov	r5, r0
 8001070:	b118      	cbz	r0, 800107a <__swbuf_r+0x12>
 8001072:	6983      	ldr	r3, [r0, #24]
 8001074:	b90b      	cbnz	r3, 800107a <__swbuf_r+0x12>
 8001076:	f7ff fd45 	bl	8000b04 <__sinit>
 800107a:	4b21      	ldr	r3, [pc, #132]	; (8001100 <__swbuf_r+0x98>)
 800107c:	429c      	cmp	r4, r3
 800107e:	d12b      	bne.n	80010d8 <__swbuf_r+0x70>
 8001080:	686c      	ldr	r4, [r5, #4]
 8001082:	69a3      	ldr	r3, [r4, #24]
 8001084:	60a3      	str	r3, [r4, #8]
 8001086:	89a3      	ldrh	r3, [r4, #12]
 8001088:	071a      	lsls	r2, r3, #28
 800108a:	d52f      	bpl.n	80010ec <__swbuf_r+0x84>
 800108c:	6923      	ldr	r3, [r4, #16]
 800108e:	b36b      	cbz	r3, 80010ec <__swbuf_r+0x84>
 8001090:	6923      	ldr	r3, [r4, #16]
 8001092:	6820      	ldr	r0, [r4, #0]
 8001094:	1ac0      	subs	r0, r0, r3
 8001096:	6963      	ldr	r3, [r4, #20]
 8001098:	b2f6      	uxtb	r6, r6
 800109a:	4283      	cmp	r3, r0
 800109c:	4637      	mov	r7, r6
 800109e:	dc04      	bgt.n	80010aa <__swbuf_r+0x42>
 80010a0:	4621      	mov	r1, r4
 80010a2:	4628      	mov	r0, r5
 80010a4:	f7ff fc88 	bl	80009b8 <_fflush_r>
 80010a8:	bb30      	cbnz	r0, 80010f8 <__swbuf_r+0x90>
 80010aa:	68a3      	ldr	r3, [r4, #8]
 80010ac:	3b01      	subs	r3, #1
 80010ae:	60a3      	str	r3, [r4, #8]
 80010b0:	6823      	ldr	r3, [r4, #0]
 80010b2:	1c5a      	adds	r2, r3, #1
 80010b4:	6022      	str	r2, [r4, #0]
 80010b6:	701e      	strb	r6, [r3, #0]
 80010b8:	6963      	ldr	r3, [r4, #20]
 80010ba:	3001      	adds	r0, #1
 80010bc:	4283      	cmp	r3, r0
 80010be:	d004      	beq.n	80010ca <__swbuf_r+0x62>
 80010c0:	89a3      	ldrh	r3, [r4, #12]
 80010c2:	07db      	lsls	r3, r3, #31
 80010c4:	d506      	bpl.n	80010d4 <__swbuf_r+0x6c>
 80010c6:	2e0a      	cmp	r6, #10
 80010c8:	d104      	bne.n	80010d4 <__swbuf_r+0x6c>
 80010ca:	4621      	mov	r1, r4
 80010cc:	4628      	mov	r0, r5
 80010ce:	f7ff fc73 	bl	80009b8 <_fflush_r>
 80010d2:	b988      	cbnz	r0, 80010f8 <__swbuf_r+0x90>
 80010d4:	4638      	mov	r0, r7
 80010d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010d8:	4b0a      	ldr	r3, [pc, #40]	; (8001104 <__swbuf_r+0x9c>)
 80010da:	429c      	cmp	r4, r3
 80010dc:	d101      	bne.n	80010e2 <__swbuf_r+0x7a>
 80010de:	68ac      	ldr	r4, [r5, #8]
 80010e0:	e7cf      	b.n	8001082 <__swbuf_r+0x1a>
 80010e2:	4b09      	ldr	r3, [pc, #36]	; (8001108 <__swbuf_r+0xa0>)
 80010e4:	429c      	cmp	r4, r3
 80010e6:	bf08      	it	eq
 80010e8:	68ec      	ldreq	r4, [r5, #12]
 80010ea:	e7ca      	b.n	8001082 <__swbuf_r+0x1a>
 80010ec:	4621      	mov	r1, r4
 80010ee:	4628      	mov	r0, r5
 80010f0:	f000 f80c 	bl	800110c <__swsetup_r>
 80010f4:	2800      	cmp	r0, #0
 80010f6:	d0cb      	beq.n	8001090 <__swbuf_r+0x28>
 80010f8:	f04f 37ff 	mov.w	r7, #4294967295
 80010fc:	e7ea      	b.n	80010d4 <__swbuf_r+0x6c>
 80010fe:	bf00      	nop
 8001100:	08001330 	.word	0x08001330
 8001104:	08001350 	.word	0x08001350
 8001108:	08001310 	.word	0x08001310

0800110c <__swsetup_r>:
 800110c:	4b32      	ldr	r3, [pc, #200]	; (80011d8 <__swsetup_r+0xcc>)
 800110e:	b570      	push	{r4, r5, r6, lr}
 8001110:	681d      	ldr	r5, [r3, #0]
 8001112:	4606      	mov	r6, r0
 8001114:	460c      	mov	r4, r1
 8001116:	b125      	cbz	r5, 8001122 <__swsetup_r+0x16>
 8001118:	69ab      	ldr	r3, [r5, #24]
 800111a:	b913      	cbnz	r3, 8001122 <__swsetup_r+0x16>
 800111c:	4628      	mov	r0, r5
 800111e:	f7ff fcf1 	bl	8000b04 <__sinit>
 8001122:	4b2e      	ldr	r3, [pc, #184]	; (80011dc <__swsetup_r+0xd0>)
 8001124:	429c      	cmp	r4, r3
 8001126:	d10f      	bne.n	8001148 <__swsetup_r+0x3c>
 8001128:	686c      	ldr	r4, [r5, #4]
 800112a:	89a3      	ldrh	r3, [r4, #12]
 800112c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001130:	0719      	lsls	r1, r3, #28
 8001132:	d42c      	bmi.n	800118e <__swsetup_r+0x82>
 8001134:	06dd      	lsls	r5, r3, #27
 8001136:	d411      	bmi.n	800115c <__swsetup_r+0x50>
 8001138:	2309      	movs	r3, #9
 800113a:	6033      	str	r3, [r6, #0]
 800113c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001140:	81a3      	strh	r3, [r4, #12]
 8001142:	f04f 30ff 	mov.w	r0, #4294967295
 8001146:	e03e      	b.n	80011c6 <__swsetup_r+0xba>
 8001148:	4b25      	ldr	r3, [pc, #148]	; (80011e0 <__swsetup_r+0xd4>)
 800114a:	429c      	cmp	r4, r3
 800114c:	d101      	bne.n	8001152 <__swsetup_r+0x46>
 800114e:	68ac      	ldr	r4, [r5, #8]
 8001150:	e7eb      	b.n	800112a <__swsetup_r+0x1e>
 8001152:	4b24      	ldr	r3, [pc, #144]	; (80011e4 <__swsetup_r+0xd8>)
 8001154:	429c      	cmp	r4, r3
 8001156:	bf08      	it	eq
 8001158:	68ec      	ldreq	r4, [r5, #12]
 800115a:	e7e6      	b.n	800112a <__swsetup_r+0x1e>
 800115c:	0758      	lsls	r0, r3, #29
 800115e:	d512      	bpl.n	8001186 <__swsetup_r+0x7a>
 8001160:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001162:	b141      	cbz	r1, 8001176 <__swsetup_r+0x6a>
 8001164:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001168:	4299      	cmp	r1, r3
 800116a:	d002      	beq.n	8001172 <__swsetup_r+0x66>
 800116c:	4630      	mov	r0, r6
 800116e:	f7ff fd97 	bl	8000ca0 <_free_r>
 8001172:	2300      	movs	r3, #0
 8001174:	6363      	str	r3, [r4, #52]	; 0x34
 8001176:	89a3      	ldrh	r3, [r4, #12]
 8001178:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800117c:	81a3      	strh	r3, [r4, #12]
 800117e:	2300      	movs	r3, #0
 8001180:	6063      	str	r3, [r4, #4]
 8001182:	6923      	ldr	r3, [r4, #16]
 8001184:	6023      	str	r3, [r4, #0]
 8001186:	89a3      	ldrh	r3, [r4, #12]
 8001188:	f043 0308 	orr.w	r3, r3, #8
 800118c:	81a3      	strh	r3, [r4, #12]
 800118e:	6923      	ldr	r3, [r4, #16]
 8001190:	b94b      	cbnz	r3, 80011a6 <__swsetup_r+0x9a>
 8001192:	89a3      	ldrh	r3, [r4, #12]
 8001194:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001198:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800119c:	d003      	beq.n	80011a6 <__swsetup_r+0x9a>
 800119e:	4621      	mov	r1, r4
 80011a0:	4630      	mov	r0, r6
 80011a2:	f000 f847 	bl	8001234 <__smakebuf_r>
 80011a6:	89a0      	ldrh	r0, [r4, #12]
 80011a8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011ac:	f010 0301 	ands.w	r3, r0, #1
 80011b0:	d00a      	beq.n	80011c8 <__swsetup_r+0xbc>
 80011b2:	2300      	movs	r3, #0
 80011b4:	60a3      	str	r3, [r4, #8]
 80011b6:	6963      	ldr	r3, [r4, #20]
 80011b8:	425b      	negs	r3, r3
 80011ba:	61a3      	str	r3, [r4, #24]
 80011bc:	6923      	ldr	r3, [r4, #16]
 80011be:	b943      	cbnz	r3, 80011d2 <__swsetup_r+0xc6>
 80011c0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011c4:	d1ba      	bne.n	800113c <__swsetup_r+0x30>
 80011c6:	bd70      	pop	{r4, r5, r6, pc}
 80011c8:	0781      	lsls	r1, r0, #30
 80011ca:	bf58      	it	pl
 80011cc:	6963      	ldrpl	r3, [r4, #20]
 80011ce:	60a3      	str	r3, [r4, #8]
 80011d0:	e7f4      	b.n	80011bc <__swsetup_r+0xb0>
 80011d2:	2000      	movs	r0, #0
 80011d4:	e7f7      	b.n	80011c6 <__swsetup_r+0xba>
 80011d6:	bf00      	nop
 80011d8:	20000000 	.word	0x20000000
 80011dc:	08001330 	.word	0x08001330
 80011e0:	08001350 	.word	0x08001350
 80011e4:	08001310 	.word	0x08001310

080011e8 <__swhatbuf_r>:
 80011e8:	b570      	push	{r4, r5, r6, lr}
 80011ea:	460e      	mov	r6, r1
 80011ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011f0:	2900      	cmp	r1, #0
 80011f2:	b096      	sub	sp, #88	; 0x58
 80011f4:	4614      	mov	r4, r2
 80011f6:	461d      	mov	r5, r3
 80011f8:	da08      	bge.n	800120c <__swhatbuf_r+0x24>
 80011fa:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80011fe:	2200      	movs	r2, #0
 8001200:	602a      	str	r2, [r5, #0]
 8001202:	061a      	lsls	r2, r3, #24
 8001204:	d410      	bmi.n	8001228 <__swhatbuf_r+0x40>
 8001206:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800120a:	e00e      	b.n	800122a <__swhatbuf_r+0x42>
 800120c:	466a      	mov	r2, sp
 800120e:	f000 f851 	bl	80012b4 <_fstat_r>
 8001212:	2800      	cmp	r0, #0
 8001214:	dbf1      	blt.n	80011fa <__swhatbuf_r+0x12>
 8001216:	9a01      	ldr	r2, [sp, #4]
 8001218:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800121c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001220:	425a      	negs	r2, r3
 8001222:	415a      	adcs	r2, r3
 8001224:	602a      	str	r2, [r5, #0]
 8001226:	e7ee      	b.n	8001206 <__swhatbuf_r+0x1e>
 8001228:	2340      	movs	r3, #64	; 0x40
 800122a:	2000      	movs	r0, #0
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	b016      	add	sp, #88	; 0x58
 8001230:	bd70      	pop	{r4, r5, r6, pc}
	...

08001234 <__smakebuf_r>:
 8001234:	898b      	ldrh	r3, [r1, #12]
 8001236:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001238:	079d      	lsls	r5, r3, #30
 800123a:	4606      	mov	r6, r0
 800123c:	460c      	mov	r4, r1
 800123e:	d507      	bpl.n	8001250 <__smakebuf_r+0x1c>
 8001240:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001244:	6023      	str	r3, [r4, #0]
 8001246:	6123      	str	r3, [r4, #16]
 8001248:	2301      	movs	r3, #1
 800124a:	6163      	str	r3, [r4, #20]
 800124c:	b002      	add	sp, #8
 800124e:	bd70      	pop	{r4, r5, r6, pc}
 8001250:	ab01      	add	r3, sp, #4
 8001252:	466a      	mov	r2, sp
 8001254:	f7ff ffc8 	bl	80011e8 <__swhatbuf_r>
 8001258:	9900      	ldr	r1, [sp, #0]
 800125a:	4605      	mov	r5, r0
 800125c:	4630      	mov	r0, r6
 800125e:	f7ff fd8b 	bl	8000d78 <_malloc_r>
 8001262:	b948      	cbnz	r0, 8001278 <__smakebuf_r+0x44>
 8001264:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001268:	059a      	lsls	r2, r3, #22
 800126a:	d4ef      	bmi.n	800124c <__smakebuf_r+0x18>
 800126c:	f023 0303 	bic.w	r3, r3, #3
 8001270:	f043 0302 	orr.w	r3, r3, #2
 8001274:	81a3      	strh	r3, [r4, #12]
 8001276:	e7e3      	b.n	8001240 <__smakebuf_r+0xc>
 8001278:	4b0d      	ldr	r3, [pc, #52]	; (80012b0 <__smakebuf_r+0x7c>)
 800127a:	62b3      	str	r3, [r6, #40]	; 0x28
 800127c:	89a3      	ldrh	r3, [r4, #12]
 800127e:	6020      	str	r0, [r4, #0]
 8001280:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001284:	81a3      	strh	r3, [r4, #12]
 8001286:	9b00      	ldr	r3, [sp, #0]
 8001288:	6163      	str	r3, [r4, #20]
 800128a:	9b01      	ldr	r3, [sp, #4]
 800128c:	6120      	str	r0, [r4, #16]
 800128e:	b15b      	cbz	r3, 80012a8 <__smakebuf_r+0x74>
 8001290:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001294:	4630      	mov	r0, r6
 8001296:	f000 f81f 	bl	80012d8 <_isatty_r>
 800129a:	b128      	cbz	r0, 80012a8 <__smakebuf_r+0x74>
 800129c:	89a3      	ldrh	r3, [r4, #12]
 800129e:	f023 0303 	bic.w	r3, r3, #3
 80012a2:	f043 0301 	orr.w	r3, r3, #1
 80012a6:	81a3      	strh	r3, [r4, #12]
 80012a8:	89a0      	ldrh	r0, [r4, #12]
 80012aa:	4305      	orrs	r5, r0
 80012ac:	81a5      	strh	r5, [r4, #12]
 80012ae:	e7cd      	b.n	800124c <__smakebuf_r+0x18>
 80012b0:	08000a9d 	.word	0x08000a9d

080012b4 <_fstat_r>:
 80012b4:	b538      	push	{r3, r4, r5, lr}
 80012b6:	4d07      	ldr	r5, [pc, #28]	; (80012d4 <_fstat_r+0x20>)
 80012b8:	2300      	movs	r3, #0
 80012ba:	4604      	mov	r4, r0
 80012bc:	4608      	mov	r0, r1
 80012be:	4611      	mov	r1, r2
 80012c0:	602b      	str	r3, [r5, #0]
 80012c2:	f7ff fa64 	bl	800078e <_fstat>
 80012c6:	1c43      	adds	r3, r0, #1
 80012c8:	d102      	bne.n	80012d0 <_fstat_r+0x1c>
 80012ca:	682b      	ldr	r3, [r5, #0]
 80012cc:	b103      	cbz	r3, 80012d0 <_fstat_r+0x1c>
 80012ce:	6023      	str	r3, [r4, #0]
 80012d0:	bd38      	pop	{r3, r4, r5, pc}
 80012d2:	bf00      	nop
 80012d4:	20000090 	.word	0x20000090

080012d8 <_isatty_r>:
 80012d8:	b538      	push	{r3, r4, r5, lr}
 80012da:	4d06      	ldr	r5, [pc, #24]	; (80012f4 <_isatty_r+0x1c>)
 80012dc:	2300      	movs	r3, #0
 80012de:	4604      	mov	r4, r0
 80012e0:	4608      	mov	r0, r1
 80012e2:	602b      	str	r3, [r5, #0]
 80012e4:	f7ff fa63 	bl	80007ae <_isatty>
 80012e8:	1c43      	adds	r3, r0, #1
 80012ea:	d102      	bne.n	80012f2 <_isatty_r+0x1a>
 80012ec:	682b      	ldr	r3, [r5, #0]
 80012ee:	b103      	cbz	r3, 80012f2 <_isatty_r+0x1a>
 80012f0:	6023      	str	r3, [r4, #0]
 80012f2:	bd38      	pop	{r3, r4, r5, pc}
 80012f4:	20000090 	.word	0x20000090

080012f8 <_init>:
 80012f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012fa:	bf00      	nop
 80012fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012fe:	bc08      	pop	{r3}
 8001300:	469e      	mov	lr, r3
 8001302:	4770      	bx	lr

08001304 <_fini>:
 8001304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001306:	bf00      	nop
 8001308:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800130a:	bc08      	pop	{r3}
 800130c:	469e      	mov	lr, r3
 800130e:	4770      	bx	lr
